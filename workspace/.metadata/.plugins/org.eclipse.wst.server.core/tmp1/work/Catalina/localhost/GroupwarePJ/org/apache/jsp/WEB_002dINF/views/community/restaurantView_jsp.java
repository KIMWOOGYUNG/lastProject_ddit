/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-08-19 04:55:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.community;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class restaurantView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1593409600303L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.release();
    _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t.text, .form-control{display: inline;}\r\n");
      out.write("\t.check{width: 20px; height: 20px}\r\n");
      out.write("\t\r\n");
      out.write("\t#content {\r\n");
      out.write("\t\tpadding: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.date {\r\n");
      out.write("\t\tmargin-right: 400px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.list-inline-item {\r\n");
      out.write("\t\tdisplay: inline;\r\n");
      out.write("\t\tfloat: left;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.inline-chart {\r\n");
      out.write("\t\twidth: 100px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t.btnAction {\r\n");
      out.write("\t\tfloat: right;\r\n");
      out.write("\t\twidth: 65px;\r\n");
      out.write("\t\tmargin-left: 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\th3 {\r\n");
      out.write("\t\twidth: 700px;\r\n");
      out.write("\t\tdisplay: inline\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write(" \t.map_wrap, .map_wrap * {margin:0;padding:0;font-family:'Malgun Gothic',dotum,'돋움',sans-serif;font-size:12px;} \r\n");
      out.write(" \t.map_wrap a, .map_wrap a:hover, .map_wrap a:active{color:#000;text-decoration: none;} \r\n");
      out.write(" \t.map_wrap {position:relative;width:100%;height:500px;} \r\n");
      out.write(" \t#menu_wrap {position:absolute;top:0;left:0;bottom:0;width:250px;margin:10px 0 30px 10px;padding:5px;overflow-y:auto;background:rgba(255, 255, 255, 0.7);z-index: 1;font-size:12px;border-radius: 10px;} \r\n");
      out.write(" \t.bg_white {background:#fff;} \r\n");
      out.write(" \t#menu_wrap hr {display: block; height: 1px;border: 0; border-top: 2px solid #5F5F5F;margin:3px 0;} \r\n");
      out.write(" \t#menu_wrap .option{text-align: center;} \r\n");
      out.write(" \t#menu_wrap .option p {margin:10px 0;}   \r\n");
      out.write(" \t#menu_wrap .option button {margin-left:5px;} \r\n");
      out.write(" \t#placesList li {list-style: none;} \r\n");
      out.write(" \t#placesList .item {position:relative;border-bottom:1px solid #888;overflow: hidden;cursor: pointer;min-height: 65px;} \r\n");
      out.write(" \t#placesList .item span {display: block;margin-top:4px;} \r\n");
      out.write(" \t#placesList .item h5, #placesList .item .info {text-overflow: ellipsis;overflow: hidden;white-space: nowrap;} \r\n");
      out.write(" \t#placesList .item .info{padding:10px 0 10px 55px;} \r\n");
      out.write(" \t#placesList .info .gray {color:#8a8a8a;} \r\n");
      out.write(" \t#placesList .info .jibun {padding-left:26px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/places_jibun.png) no-repeat;} \r\n");
      out.write(" \t#placesList .info .tel {color:#009900;} \r\n");
      out.write(" \t#placesList .item .markerbg {float:left;position:absolute;width:36px; height:37px;margin:10px 0 0 10px;background:url(https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png) no-repeat;} \r\n");
      out.write(" \t#placesList .item .marker_1 {background-position: 0 -10px;} \r\n");
      out.write(" \t#placesList .item .marker_2 {background-position: 0 -56px;} \r\n");
      out.write(" \t#placesList .item .marker_3 {background-position: 0 -102px} \r\n");
      out.write(" \t#placesList .item .marker_4 {background-position: 0 -148px;} \r\n");
      out.write(" \t#placesList .item .marker_5 {background-position: 0 -194px;} \r\n");
      out.write(" \t#placesList .item .marker_6 {background-position: 0 -240px;} \r\n");
      out.write(" \t#placesList .item .marker_7 {background-position: 0 -286px;} \r\n");
      out.write(" \t#placesList .item .marker_8 {background-position: 0 -332px;} \r\n");
      out.write(" \t#placesList .item .marker_9 {background-position: 0 -378px;} \r\n");
      out.write(" \t#placesList .item .marker_10 {background-position: 0 -423px;} \r\n");
      out.write(" \t#placesList .item .marker_11 {background-position: 0 -470px;}\r\n");
      out.write(" \t#placesList .item .marker_12 {background-position: 0 -516px;} \r\n");
      out.write(" \t#placesList .item .marker_13 {background-position: 0 -562px;} \r\n");
      out.write(" \t#placesList .item .marker_14 {background-position: 0 -608px;} \r\n");
      out.write(" \t#placesList .item .marker_15 {background-position: 0 -654px;} \r\n");
      out.write(" \t#pagination {margin:10px auto;text-align: center;} \r\n");
      out.write(" \t#pagination a {display:inline-block;margin-right:10px;} \r\n");
      out.write(" \t#pagination .on {font-weight: bold; cursor: default;color:#777;} \r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("\t<div class=\"card card-info\">\r\n");
      out.write("\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t<h3>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_title}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h3>\r\n");
      out.write("\t\t\t<button class=\"btn btn-block bg-gradient-secondary btn-sm btnAction\"\r\n");
      out.write("\t\t\t\tid=\"btnUpdate\" style=\"margin-top: 0px;\"\r\n");
      out.write("\t\t\t\tonclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pos}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">\r\n");
      out.write("\t\t\t\t<i class=\"fas fa-pencil-alt\"> </i> 목록\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t<button class=\"btn btn-block bg-gradient-secondary btn-sm btnAction\"\r\n");
      out.write("\t\t\t\tid=\"btnUpdate\" style=\"margin-top: 0px;\"\r\n");
      out.write("\t\t\t\tonclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${childBoardURL}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("';\">\r\n");
      out.write("\t\t\t\t<i class=\"fas fa-pencil-alt\"> </i> 답글\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-block bg-gradient-secondary btn-sm btnAction\"\r\n");
      out.write("\t\t\t\tid=\"btnUpdate\" style=\"margin-top: 0px;\"\r\n");
      out.write("\t\t\t\tonclick=\"location.href='");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList/updateBoard/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pos}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("'\">\r\n");
      out.write("\t\t\t\t<i class=\"fas fa-pencil-alt\"> </i> 수정\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t\t<button class=\"btn btn-block bg-gradient-danger btn-sm btnAction\" id=\"deleteBtn\" style=\"margin-top: 0px;\">\r\n");
      out.write("\t\t\t\t<i class=\"fas fa-trash\"> </i> 삭제\r\n");
      out.write("\t\t\t</button>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\t<!-- form start -->\r\n");
      out.write("\t\t<form class=\"form-horizontal\">\r\n");
      out.write("\t\t\t<div class=\"card-body\">\r\n");
      out.write("\t\t\t\t<input type=\"hidden\" name=\"board_code\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_code }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" />\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">제목</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"board_title\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"제목\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background: white;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">작성자</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"emp_code\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"작성자\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.emp_code }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background: none;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">작성날짜</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"board_date\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"작성날짜\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_date }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background: none;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">조회수</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"board_hit\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"조회수\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_hit }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background: none;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">첨부파일</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"form-group row\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">주소</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"board_address\"\r\n");
      out.write("\t\t\t\t\t\t\tplaceholder=\"주소\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_address }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" readonly\r\n");
      out.write("\t\t\t\t\t\t\tstyle=\"background: white;\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"form-group row\">\r\n");
      out.write("\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">내용</label>\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-10\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_content }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("\t<div class=\"card card-info\">\r\n");
      out.write("\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_address }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<div class = \"card-body\">\r\n");
      out.write("\t\t\t<div class=\"map_wrap\">\r\n");
      out.write("\t\t\t\t<div id=\"map\"\r\n");
      out.write("\t\t\t\t\tstyle=\"width: 100%; height: 100%; position: relative; overflow: hidden;\"></div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\t<div id=\"menu_wrap\" class=\"bg_white\">\r\n");
      out.write("\t\t\t\t\t<div class=\"option\">\r\n");
      out.write("\t\t\t\t\t\t<div>\r\n");
      out.write("\t\t\t\t\t\t\t<form onsubmit=\"searchPlaces(); return false;\">\r\n");
      out.write("\t\t\t\t\t\t\t\t키워드 : <input type=\"text\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_address}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write(" \"\r\n");
      out.write("\t\t\t\t\t\t\t\t\tid=\"keyword\" size=\"15\">\r\n");
      out.write("\t\t\t\t\t\t\t\t<button type=\"submit\">검색하기</button>\r\n");
      out.write("\t\t\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<hr>\r\n");
      out.write("\t\t\t\t\t<ul id=\"placesList\"></ul>\r\n");
      out.write("\t\t\t\t\t<div id=\"pagination\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\t\r\n");
      out.write("<!--///////////////////////////////////////지도API//////////////////////////////////////////////////////////-->\r\n");
      out.write("<!-- <div id=\"map\" style=\"width:100%; height:800px;\"></div> -->\r\n");
      out.write("<!-- <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js\"></script> -->\r\n");
      out.write("<script type=\"text/javascript\" src=\"//dapi.kakao.com/v2/maps/sdk.js?appkey=fa8be80617da9d878a9c56e308d0051c&libraries=services,clusterer,drawing\"></script>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("//마커를 담을 배열입니다\r\n");
      out.write("var markers = [];\r\n");
      out.write("\r\n");
      out.write("var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("    mapOption = {\r\n");
      out.write("        center: new kakao.maps.LatLng(37.566826, 126.9786567), // 지도의 중심좌표\r\n");
      out.write("        level: 3 // 지도의 확대 레벨\r\n");
      out.write("    };  \r\n");
      out.write("\r\n");
      out.write("// 지도를 생성합니다    \r\n");
      out.write("var map = new kakao.maps.Map(mapContainer, mapOption); \r\n");
      out.write("\r\n");
      out.write("// 장소 검색 객체를 생성합니다\r\n");
      out.write("var ps = new kakao.maps.services.Places();  \r\n");
      out.write("\r\n");
      out.write("// 검색 결과 목록이나 마커를 클릭했을 때 장소명을 표출할 인포윈도우를 생성합니다\r\n");
      out.write("var infowindow = new kakao.maps.InfoWindow({zIndex:1});\r\n");
      out.write("\r\n");
      out.write("// 키워드로 장소를 검색합니다\r\n");
      out.write("searchPlaces();\r\n");
      out.write("\r\n");
      out.write("// 키워드 검색을 요청하는 함수입니다\r\n");
      out.write("function searchPlaces() {\r\n");
      out.write("\r\n");
      out.write("    var keyword = document.getElementById('keyword').value;\r\n");
      out.write("\r\n");
      out.write("    if (!keyword.replace(/^\\s+|\\s+$/g, '')) {\r\n");
      out.write("        alert('키워드를 입력해주세요!');\r\n");
      out.write("        return false;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 장소검색 객체를 통해 키워드로 장소검색을 요청합니다\r\n");
      out.write("    ps.keywordSearch( keyword, placesSearchCB); \r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 장소검색이 완료됐을 때 호출되는 콜백함수 입니다\r\n");
      out.write("function placesSearchCB(data, status, pagination) {\r\n");
      out.write("    if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\r\n");
      out.write("        // 정상적으로 검색이 완료됐으면\r\n");
      out.write("        // 검색 목록과 마커를 표출합니다\r\n");
      out.write("        displayPlaces(data);\r\n");
      out.write("\r\n");
      out.write("        // 페이지 번호를 표출합니다\r\n");
      out.write("        displayPagination(pagination);\r\n");
      out.write("\r\n");
      out.write("    } else if (status === kakao.maps.services.Status.ZERO_RESULT) {\r\n");
      out.write("\r\n");
      out.write("        alert('검색 결과가 존재하지 않습니다.');\r\n");
      out.write("        return;\r\n");
      out.write("\r\n");
      out.write("    } else if (status === kakao.maps.services.Status.ERROR) {\r\n");
      out.write("\r\n");
      out.write("        alert('검색 결과 중 오류가 발생했습니다.');\r\n");
      out.write("        return;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색 결과 목록과 마커를 표출하는 함수입니다\r\n");
      out.write("function displayPlaces(places) {\r\n");
      out.write("\r\n");
      out.write("    var listEl = document.getElementById('placesList'), \r\n");
      out.write("    menuEl = document.getElementById('menu_wrap'),\r\n");
      out.write("    fragment = document.createDocumentFragment(), \r\n");
      out.write("    bounds = new kakao.maps.LatLngBounds(), \r\n");
      out.write("    listStr = '';\r\n");
      out.write("    \r\n");
      out.write("    // 검색 결과 목록에 추가된 항목들을 제거합니다\r\n");
      out.write("    removeAllChildNods(listEl);\r\n");
      out.write("\r\n");
      out.write("    // 지도에 표시되고 있는 마커를 제거합니다\r\n");
      out.write("    removeMarker();\r\n");
      out.write("    \r\n");
      out.write("    for ( var i=0; i<places.length; i++ ) {\r\n");
      out.write("\r\n");
      out.write("        // 마커를 생성하고 지도에 표시합니다\r\n");
      out.write("        var placePosition = new kakao.maps.LatLng(places[i].y, places[i].x),\r\n");
      out.write("            marker = addMarker(placePosition, i), \r\n");
      out.write("            itemEl = getListItem(i, places[i]); // 검색 결과 항목 Element를 생성합니다\r\n");
      out.write("\r\n");
      out.write("        // 검색된 장소 위치를 기준으로 지도 범위를 재설정하기위해\r\n");
      out.write("        // LatLngBounds 객체에 좌표를 추가합니다\r\n");
      out.write("        bounds.extend(placePosition);\r\n");
      out.write("\r\n");
      out.write("        // 마커와 검색결과 항목에 mouseover 했을때\r\n");
      out.write("        // 해당 장소에 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("        // mouseout 했을 때는 인포윈도우를 닫습니다\r\n");
      out.write("        (function(marker, title) {\r\n");
      out.write("            kakao.maps.event.addListener(marker, 'mouseover', function() {\r\n");
      out.write("                displayInfowindow(marker, title);\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            kakao.maps.event.addListener(marker, 'mouseout', function() {\r\n");
      out.write("                infowindow.close();\r\n");
      out.write("            });\r\n");
      out.write("\r\n");
      out.write("            itemEl.onmouseover =  function () {\r\n");
      out.write("                displayInfowindow(marker, title);\r\n");
      out.write("            };\r\n");
      out.write("\r\n");
      out.write("            itemEl.onmouseout =  function () {\r\n");
      out.write("                infowindow.close();\r\n");
      out.write("            };\r\n");
      out.write("        })(marker, places[i].place_name);\r\n");
      out.write("\r\n");
      out.write("        fragment.appendChild(itemEl);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    // 검색결과 항목들을 검색결과 목록 Elemnet에 추가합니다\r\n");
      out.write("    listEl.appendChild(fragment);\r\n");
      out.write("    menuEl.scrollTop = 0;\r\n");
      out.write("\r\n");
      out.write("    // 검색된 장소 위치를 기준으로 지도 범위를 재설정합니다\r\n");
      out.write("    map.setBounds(bounds);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색결과 항목을 Element로 반환하는 함수입니다\r\n");
      out.write("function getListItem(index, places) {\r\n");
      out.write("\r\n");
      out.write("    var el = document.createElement('li'),\r\n");
      out.write("    itemStr = '<span class=\"markerbg marker_' + (index+1) + '\"></span>' +\r\n");
      out.write("                '<div class=\"info\">' +\r\n");
      out.write("                '   <h5>' + places.place_name + '</h5>';\r\n");
      out.write("\r\n");
      out.write("    if (places.road_address_name) {\r\n");
      out.write("        itemStr += '    <span>' + places.road_address_name + '</span>' +\r\n");
      out.write("                    '   <span class=\"jibun gray\">' +  places.address_name  + '</span>';\r\n");
      out.write("    } else {\r\n");
      out.write("        itemStr += '    <span>' +  places.address_name  + '</span>'; \r\n");
      out.write("    }\r\n");
      out.write("                 \r\n");
      out.write("      itemStr += '  <span class=\"tel\">' + places.phone  + '</span>' +\r\n");
      out.write("                '</div>';           \r\n");
      out.write("\r\n");
      out.write("    el.innerHTML = itemStr;\r\n");
      out.write("    el.className = 'item';\r\n");
      out.write("\r\n");
      out.write("    return el;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 마커를 생성하고 지도 위에 마커를 표시하는 함수입니다\r\n");
      out.write("function addMarker(position, idx, title) {\r\n");
      out.write("    var imageSrc = 'https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png', // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n");
      out.write("        imageSize = new kakao.maps.Size(36, 37),  // 마커 이미지의 크기\r\n");
      out.write("        imgOptions =  {\r\n");
      out.write("            spriteSize : new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n");
      out.write("            spriteOrigin : new kakao.maps.Point(0, (idx*46)+10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n");
      out.write("            offset: new kakao.maps.Point(13, 37) // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n");
      out.write("        },\r\n");
      out.write("        markerImage = new kakao.maps.MarkerImage(imageSrc, imageSize, imgOptions),\r\n");
      out.write("            marker = new kakao.maps.Marker({\r\n");
      out.write("            position: position, // 마커의 위치\r\n");
      out.write("            image: markerImage \r\n");
      out.write("        });\r\n");
      out.write("\r\n");
      out.write("    marker.setMap(map); // 지도 위에 마커를 표출합니다\r\n");
      out.write("    markers.push(marker);  // 배열에 생성된 마커를 추가합니다\r\n");
      out.write("\r\n");
      out.write("    return marker;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 지도 위에 표시되고 있는 마커를 모두 제거합니다\r\n");
      out.write("function removeMarker() {\r\n");
      out.write("    for ( var i = 0; i < markers.length; i++ ) {\r\n");
      out.write("        markers[i].setMap(null);\r\n");
      out.write("    }   \r\n");
      out.write("    markers = [];\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색결과 목록 하단에 페이지번호를 표시는 함수입니다\r\n");
      out.write("function displayPagination(pagination) {\r\n");
      out.write("    var paginationEl = document.getElementById('pagination'),\r\n");
      out.write("        fragment = document.createDocumentFragment(),\r\n");
      out.write("        i; \r\n");
      out.write("\r\n");
      out.write("    // 기존에 추가된 페이지번호를 삭제합니다\r\n");
      out.write("    while (paginationEl.hasChildNodes()) {\r\n");
      out.write("        paginationEl.removeChild (paginationEl.lastChild);\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    for (i=1; i<=pagination.last; i++) {\r\n");
      out.write("        var el = document.createElement('a');\r\n");
      out.write("        el.href = \"#\";\r\n");
      out.write("        el.innerHTML = i;\r\n");
      out.write("\r\n");
      out.write("        if (i===pagination.current) {\r\n");
      out.write("            el.className = 'on';\r\n");
      out.write("        } else {\r\n");
      out.write("            el.onclick = (function(i) {\r\n");
      out.write("                return function() {\r\n");
      out.write("                    pagination.gotoPage(i);\r\n");
      out.write("                }\r\n");
      out.write("            })(i);\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        fragment.appendChild(el);\r\n");
      out.write("    }\r\n");
      out.write("    paginationEl.appendChild(fragment);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("// 검색결과 목록 또는 마커를 클릭했을 때 호출되는 함수입니다\r\n");
      out.write("// 인포윈도우에 장소명을 표시합니다\r\n");
      out.write("function displayInfowindow(marker, title) {\r\n");
      out.write("    var content = '<div style=\"padding:5px;z-index:1;\">' + title + '</div>';\r\n");
      out.write("\r\n");
      out.write("    infowindow.setContent(content);\r\n");
      out.write("    infowindow.open(map, marker);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" // 검색결과 목록의 자식 Element를 제거하는 함수입니다\r\n");
      out.write("function removeAllChildNods(el) {   \r\n");
      out.write("    while (el.hasChildNodes()) {\r\n");
      out.write("        el.removeChild (el.lastChild);\r\n");
      out.write("    }\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("/* \r\n");
      out.write(" $(function(){\r\n");
      out.write("\t   $.ajax({\r\n");
      out.write("\t      url:\"Map.jsp\",\r\n");
      out.write("\t      datatype:\"json\",\r\n");
      out.write("\t      type:\"get\"\r\n");
      out.write("\t   }).done(function(data){\r\n");
      out.write("\t      data =  JSON.parse(data.trim());\r\n");
      out.write("\r\n");
      out.write("\t      var mapContainer = document.getElementById('map'), // 지도를 표시할 div \r\n");
      out.write("\t      mapOption = { //지도를 생성할 때 필요한 기본 옵션\r\n");
      out.write("\t         center : new kakao.maps.LatLng(36.340453, 127.399441), // 지도의 중심좌표\r\n");
      out.write("\t         level : 10// 지도의 확대 레벨 (확대, 축소 정도)\r\n");
      out.write("\t      };\r\n");
      out.write("\r\n");
      out.write("\t      // 지도를 생성합니다    \r\n");
      out.write("\t      var map = new kakao.maps.Map(mapContainer, mapOption);\r\n");
      out.write("\t      \r\n");
      out.write("\t      // 주소-좌표 변환 객체를 생성합니다\r\n");
      out.write("\t      var geocoder = new kakao.maps.services.Geocoder();\r\n");
      out.write("\t      \r\n");
      out.write("\t      for (var i = 0; i < data.length; i++) {\r\n");
      out.write("\t         \r\n");
      out.write("\t         (function(i){\r\n");
      out.write("\t            geocoder.addressSearch(data[i].addr, function(result, status) {\r\n");
      out.write("\t               // 정상적으로 검색이 완료됐으면 \r\n");
      out.write("\t                if (status === kakao.maps.services.Status.OK) {\r\n");
      out.write("\t                   var coords = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n");
      out.write("\t                    \r\n");
      out.write("\t                  // 마커를 생성합니다\r\n");
      out.write("\t                  var marker = new kakao.maps.Marker({\r\n");
      out.write("\t                     map:map, // 마커를 표시할 지도\r\n");
      out.write("\t                     position : coords, // 마커를 표시할 위치\r\n");
      out.write("\t                     title : data[i].title // 마커의 타이틀, 마커에 마우스를 올리면 타이틀이 표시됩니다\r\n");
      out.write("\t                  });\r\n");
      out.write("\t         \r\n");
      out.write("\t                  // 인포윈도우를 생성합니다\r\n");
      out.write("\t                  var infowindow = new kakao.maps.InfoWindow({\r\n");
      out.write("\t                     content : data[i].title\r\n");
      out.write("\t                  });\r\n");
      out.write("\t         \r\n");
      out.write("\t                  kakao.maps.event.addListener(marker, 'click', makeOverListener(map, marker, infowindow));\r\n");
      out.write("\t                  \r\n");
      out.write("\t                  kakao.maps.event.addListener(marker, 'mouseout', makeOutListener(infowindow));\r\n");
      out.write("\t               }\r\n");
      out.write("\t            });\r\n");
      out.write("\t         })(i);\r\n");
      out.write("\t      } \r\n");
      out.write("\t   });\r\n");
      out.write("\t});\r\n");
      out.write("\t   \r\n");
      out.write("\t   // 인포윈도우를 표시하는 클로저를 만드는 함수입니다 \r\n");
      out.write("\t   function makeOverListener(map, marker, infowindow) {\r\n");
      out.write("\t      return function() {\r\n");
      out.write("\t         infowindow.open(map, marker);\r\n");
      out.write("\t      };\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write("\t   // 인포윈도우를 닫는 클로저를 만드는 함수입니다 \r\n");
      out.write("\t   function makeOutListener(infowindow) {\r\n");
      out.write("\t      return function() {\r\n");
      out.write("\t         infowindow.close();\r\n");
      out.write("\t      };\r\n");
      out.write("\t   }\r\n");
      out.write("\r\n");
      out.write(" */\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/////////////////////////////////////////////////////////////////////////////////////////\r\n");
      out.write("\r\n");
      out.write("\t$(\"#deleteBtn\").on(\"click\", function(){\r\n");
      out.write("\t\tlet board_code = \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\";\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(confirm(\"삭제하시겠습니까 ? \")){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList/deleteBoard/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write('/');
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_catag}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("',\r\n");
      out.write("\t\t\t\ttype : 'POST',\r\n");
      out.write("\t            datatype : 'json',\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\tboard_code : board_code\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tsuccess : function(data){\r\n");
      out.write("\t\t\t\t\talert(\"삭제가 완료 되었습니다.\");\r\n");
      out.write("\t\t\t\t\tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/board/boardList/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_catag}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(error){\r\n");
      out.write("// \t\t\t\t\talert(error);\r\n");
      out.write("\t\t\t\t\talert(\"삭제를 실패했습니다.\");\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /WEB-INF/views/community/restaurantView.jsp(84,3) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/board/boardList/insertForm/${board.board_code }/${pos }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /WEB-INF/views/community/restaurantView.jsp(84,3) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setVar("childBoardURL");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = org.apache.jasper.runtime.JspRuntimeLibrary.startBufferedBody(_jspx_page_context, _jspx_th_c_005furl_005f0);
        }
        do {
          out.write("\r\n");
          out.write("\t\t\t\t");
          if (_jspx_meth_c_005fparam_005f0(_jspx_th_c_005furl_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005furl_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
        if (_jspx_eval_c_005furl_005f0 != javax.servlet.jsp.tagext.Tag.EVAL_BODY_INCLUDE) {
          out = _jspx_page_context.popBody();
        }
      }
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvar_005fvalue.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fparam_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005furl_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:param
    org.apache.taglibs.standard.tag.rt.core.ParamTag _jspx_th_c_005fparam_005f0 = (org.apache.taglibs.standard.tag.rt.core.ParamTag) _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.ParamTag.class);
    boolean _jspx_th_c_005fparam_005f0_reused = false;
    try {
      _jspx_th_c_005fparam_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fparam_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005furl_005f0);
      // /WEB-INF/views/community/restaurantView.jsp(87,4) name = name type = null reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setName("parent_board");
      // /WEB-INF/views/community/restaurantView.jsp(87,4) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fparam_005f0.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.board_code }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005fparam_005f0 = _jspx_th_c_005fparam_005f0.doStartTag();
      if (_jspx_th_c_005fparam_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fparam_0026_005fvalue_005fname_005fnobody.reuse(_jspx_th_c_005fparam_005f0);
      _jspx_th_c_005fparam_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fparam_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fparam_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /WEB-INF/views/community/restaurantView.jsp(143,6) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/community/restaurantView.jsp(143,6) '${board.attatchList }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${board.attatchList }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/community/restaurantView.jsp(143,6) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("attatch");
      // /WEB-INF/views/community/restaurantView.jsp(143,6) name = varStatus type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVarStatus("vs");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t<a href=\"");
            if (_jspx_meth_c_005furl_005f1(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${attatch.org_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</a> ");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not vs.last?\"&nbsp;\":\"\" }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\r\n");
            out.write("\t\t\t\t\t\t\t\t");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvarStatus_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005furl_005f1(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f1 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f1_reused = false;
    try {
      _jspx_th_c_005furl_005f1.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f1.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /WEB-INF/views/community/restaurantView.jsp(145,16) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f1.setValue((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("/board/file/${attatch.board_attcode}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      int _jspx_eval_c_005furl_005f1 = _jspx_th_c_005furl_005f1.doStartTag();
      if (_jspx_th_c_005furl_005f1.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f1);
      _jspx_th_c_005furl_005f1_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f1, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f1_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/community/restaurantView.jsp(161,4) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty board.board_catag}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t\t\t<div class=\"form-group row\">\r\n");
          out.write("\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
          out.write("\t\t\t\t\t\t\t<label for=\"board_title\" class=\"col-sm-1 col-form-label\" style=\"margin-right: 64px;\">답글</label>\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
          out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"emp_code\"\r\n");
          out.write("\t\t\t\t\t\t\t\tplaceholder=\"작성자\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${board.emp_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" readonly\r\n");
          out.write("\t\t\t\t\t\t\t\tstyle=\"background: none; margin-right: 64px;\">\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t\t<div class=\"col-sm-10\">\r\n");
          out.write("\t\t\t\t\t\t\t<input type=\"text\" class=\"form-control\" id=\"reply\"\r\n");
          out.write("\t\t\t\t\t\t\t\tplaceholder=\"답글\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${reply}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\" readonly\r\n");
          out.write("\t\t\t\t\t\t\t\tstyle=\"background: none;\">\r\n");
          out.write("<!-- \t\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary\" id=\"save\" style=\"margin-left: 50%\"><i class=\"fas fa-pencil-alt\"> </i>등록</button> -->\r\n");
          out.write("\t\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t");
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }
}
