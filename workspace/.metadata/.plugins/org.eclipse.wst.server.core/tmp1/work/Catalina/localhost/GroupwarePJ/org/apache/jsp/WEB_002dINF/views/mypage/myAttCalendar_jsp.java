/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-08-18 00:19:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class myAttCalendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1593409600303L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1588032890000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar", Long.valueOf(1593409602202L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/jstl-1.2.jar!/META-INF/fn.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" \r\n");
      out.write("<!-- fullCalendar -->\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar/main.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-daygrid/main.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-timegrid/main.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-bootstrap/main.min.css\">\r\n");
      out.write("<style>\r\n");
      out.write("#calendar {\r\n");
      out.write("\tmax-width: auto;\r\n");
      out.write("\tmargin: 0 auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("h2 {\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<section class=\"content\">\r\n");
      out.write("\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t\t\t<div class=\"col-md-3\">\r\n");
      out.write("\t\t\t\t<div class=\"sticky-top mb-3\">\r\n");
      out.write("\t\t\t\t\t<!-- /.card -->\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- /.col -->\r\n");
      out.write("\t\t<div class=\"col-md-12\">\r\n");
      out.write("\t\t\t<div class=\"card \">\r\n");
      out.write("\t\t\t\t<div class=\"card-header\">\r\n");
      out.write("\t\t\t\t\t<div class=\"col-sm-12\">\r\n");
      out.write("\t\t\t\t\t\t<h2>");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${title }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</h2>\r\n");
      out.write("\t\t\t\t\t\t<button class=\"btn btn-info btn-sm float-right\" id=\"goPageBtn\"\r\n");
      out.write("\t\t\t\t\t\tvalue=");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${title eq '근태현황'? '\"attcheck\"':'\"writeApproval\"' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t\t\t\t\t>\r\n");
      out.write("\t\t\t\t\t\t");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${title eq '근태현황'? '출퇴근체크':'휴가원 작성 바로가기' }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<i class=\"fas fa-angle-double-right\"></i> \r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<div class=\"card-body p-0\">\r\n");
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- THE CALENDAR -->\r\n");
      out.write("\t\t\t\t\t<div id=\"calendar\"></div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- /.card-body -->\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<!-- /.card -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- /.col -->\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<!-- /.row -->\r\n");
      out.write("</section>\r\n");
      out.write("\r\n");
      out.write("<!-- fullCalendar 2.2.5 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/moment/moment.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar/main.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-daygrid/main.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-timegrid/main.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-interaction/main.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-bootstrap/main.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// var eventArr = [];\r\n");
      out.write("var getAttList = function(){\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/mypage/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${state}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write("\t   ,contentType: \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n");
      out.write("\t   ,type:\"post\"\r\n");
      out.write("\t   ,success : function(mp){\r\n");
      out.write("\t\t   //출근시간\r\n");
      out.write("// \t\t   let list = mp;\r\n");
      out.write("// \t\t   $.each(list, function(idx, item){\r\n");
      out.write("// \t\t\t   let myEvent = new Object();\r\n");
      out.write("// \t\t\t   myEvent.title = item.title;\r\n");
      out.write("// \t\t\t   myEvent.start = item.start;\r\n");
      out.write("// \t\t\t   myEvent.end = item.end;\r\n");
      out.write("// \t\t\t   myEvent.backgroundColor = item.color;\r\n");
      out.write("// \t           myEvent.borderColor = item.color;\r\n");
      out.write("// \t\t\t   eventArr.push(myEvent);\r\n");
      out.write("// \t\t   });\r\n");
      out.write("\t\t   var calendarEl = document.getElementById('calendar');\r\n");
      out.write("\t\t //캘린더생성\r\n");
      out.write("\t\tvar calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write("\t\t \tplugins : [ 'interaction', 'dayGrid', 'timeGrid', 'list' ],\r\n");
      out.write("\t\t \theader : {\r\n");
      out.write("\t\t \t\tleft : 'prev,next today',\r\n");
      out.write("\t\t \t\tcenter : 'title',\r\n");
      out.write("\t\t \t\tright : 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n");
      out.write("\t\t \t},\r\n");
      out.write("\t\t \tnavLinks : true, // can click day/week names to navigate views\r\n");
      out.write("\t\t \tselectMirror : true,\r\n");
      out.write("\t\t \teventLimit : true,\r\n");
      out.write("\t\t \tnavLinks : true,\r\n");
      out.write("\t\t \tevents: mp,\r\n");
      out.write("\t\t \tdisplayEventTime: false,\r\n");
      out.write("\t\t \teditable  : false,\r\n");
      out.write("\t\t \tallDay : false,\r\n");
      out.write("\t\t \theight: 770\r\n");
      out.write("\t\t });\r\n");
      out.write("\t\t calendar.render();\r\n");
      out.write("\t   }\r\n");
      out.write("\t});\t\r\n");
      out.write("}\r\n");
      out.write("getAttList();\r\n");
      out.write("$(\"#goPageBtn\").on(\"click\",function(){\r\n");
      out.write("\tvar temp = $(\"#goPageBtn\").val();\r\n");
      out.write("\tvar url=\"\";\r\n");
      out.write("\tif(temp=='attcheck'){\r\n");
      out.write("  \t\tvar today = new Date();\r\n");
      out.write("  \t\t//출근체크날짜구하기\r\n");
      out.write("\t    var year = today.getFullYear();              //yyyy\r\n");
      out.write("\t    var month = (1 + today.getMonth());          //M\r\n");
      out.write("\t    month = month >= 10 ? month : '0' + month;  //month 두자리로 저장\r\n");
      out.write("\t    var day = today.getDate();                   //d\r\n");
      out.write("\t    day = day >= 10 ? day : '0' + day;          //day 두자리로 저장\r\n");
      out.write("\t    var cws_code = year + '' + month + '' + day;       //'-' 추가하여 yyyy-mm-dd 형태 생성 가능\r\n");
      out.write("\t    var todayStr = year +\"년 \"+month+\"월 \"+day+\"일 \";\r\n");
      out.write("\t\t//출근체크시간구하기\r\n");
      out.write("\t    var hour = today.getHours();\r\n");
      out.write("\t    var min = today.getMinutes();\r\n");
      out.write("\t    var checkTime = hour + \"\"+ min;\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\ttype : \"POST\"\r\n");
      out.write("\t\t\t\t,url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/attCheck.do\"\r\n");
      out.write("\t\t\t \t,data:{cws_code:cws_code,checkTime:checkTime}\r\n");
      out.write("\t\t\t\t,success:function(resp){\r\n");
      out.write("\t\t\t\t\talert(todayStr+resp);\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t}else{\r\n");
      out.write("\t\t//approvalWrite.approval\r\n");
      out.write("\t\tlocation.href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/approval/approvalwrite\";\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
