package kr.or.ddit.approval.controller;

import java.util.List;

import javax.inject.Inject;

import org.apache.commons.lang3.StringUtils;
import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.approval.service.ApprovalServiceImpl;
import kr.or.ddit.approval.service.IApprovalService;
import kr.or.ddit.vo.DraftVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.SearchVO;

@Controller
@RequestMapping("approval")
public class ApprovalController {
	@Inject
	IApprovalService service;
	
	@GetMapping("publicformbox")
	public String Depmanage() {
		String goPage = "publicformList.approval";
		return goPage;
	}

	@GetMapping("myapproval/{pos}")
	public String printdriftList(@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@PathVariable(name = "pos") String draft_pos, SearchVO searchVO,Model model) {
		String goPage = "daftList.approval";
			System.out.println("값은 = "+draft_pos);
			System.out.println(searchVO);
		if(draft_pos.equals("all")) {
			model.addAttribute("title", "내가 쓴 기안서");
		}else if(draft_pos.equals("temp")){
			model.addAttribute("title", "임시보관함");
		}else if(draft_pos.equals("delete")){
			model.addAttribute("title", "삭제함");
		}else {
			//아무것도 아닐경우
		}
		
		
		PagingVO<DraftVO> pagingVO = new PagingVO<>();
		pagingVO.setDetailSearch(makeDraftSearchVo(searchVO, draft_pos));
		pagingVO.setCurrentPage(currentPage);
		int totalRecord = service.getApproveCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		List<DraftVO> projectList = service.getTempFolder(pagingVO);
		pagingVO.setDataList(projectList);
		
		model.addAttribute("draft_pos", draft_pos);
		model.addAttribute("pagingVO", pagingVO);
		
		return goPage;
	}
	
	@GetMapping(value="myapproval/{pos}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<DraftVO> ajaxForlist(
			@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			@PathVariable(name = "pos") String draft_pos,SearchVO searchVO,Model model
		){
		printdriftList(currentPage, draft_pos, searchVO, model);
		return (PagingVO<DraftVO>) model.asMap().get("pagingVO");
	}
	
	
	
	@GetMapping("approvalwrite")
	public String goWrite() {
		String goPage = "approvalWrite.approval";
		return goPage;
	}
	
	private DraftVO makeDraftSearchVo(SearchVO searchVO, String draft_pos) {
		DraftVO draftVO = new DraftVO();
		String state = null;
		if("all".equals(draft_pos)) {
			state = "1";
		}else if("temp".equals(draft_pos)) {
			state = "2";
		}else if("delete".equals(draft_pos)) {
			state = "3";
		}
		
		
		draftVO.setDraft_pos(state);
		
		
		
		
		String type = searchVO.getSearchType();
		
		if(!StringUtils.isBlank(type)) {
			String data = searchVO.getSearchWord();
			if("no".equals(type)) {
				draftVO.setDraft_title(data);
			}else if("emp".equals(type)){
				draftVO.setEmp_code(data);
			}else if("title".equals(type)){
				draftVO.setDraft_title(data);
			}else if("state".equals(type)){
				draftVO.setDraft_stat(data);
			}
		}
		
		return draftVO;
	}
	
}
