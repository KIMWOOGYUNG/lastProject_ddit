package kr.or.ddit.community.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.community.service.IBoardService;
import kr.or.ddit.enums.ResultState;
import kr.or.ddit.vo.BoardVO;

@Controller
public class BoardModifyController {
	@Inject
	IBoardService service;
	
	// 수정
	@GetMapping("/board/boardList/boardForm/{board_code}")
	public String delete(@PathVariable String board_code, Model model) {
		BoardVO board = service.selectBoard(board_code);
		model.addAttribute("board", board);
		
		model.addAttribute("state", "updateBoard");
		model.addAttribute("board_code" + board_code);
		
		return "boardForm.community";
	}
	
	@PostMapping("/board/boardList/boardForm/{board_code}")
	public String update(@Valid @ModelAttribute("board") BoardVO board, BindingResult errors,
			@RequestParam String board_code, Model model, RedirectAttributes redirectAttributes
			) {
		String goPage = null;
		String message = null;
		
		if(!errors.hasErrors()) {
			ResultState result = service.updateBoard(board);
			switch(result) {
			case FAIL:
				message = "다시시도";
				redirectAttributes.addFlashAttribute("board", board);
				goPage = "redirect:/board/boardList/updateBoard/" + board_code;
				break;
			default:
				goPage = "redirect:/board/boardList";
				break;
			}
		}else {
			goPage = "redirect:/board/boardList/boardForm/" + board_code;
			redirectAttributes.addFlashAttribute("board", board);
			redirectAttributes.addFlashAttribute("org.springframework.validation.BindingResult.board", errors);
		}
		
		
		model.addAttribute("message", message);
		
		return goPage;
	}
	
	// 삭제
	@DeleteMapping("/board/boardView/delboard")
	public String delete(@RequestParam String board_code, Model model, HttpSession session, @PathVariable String board_catag) {
		String goPage = null;
		ResultState result = null;

		result = service.deleteBoard(board_code);
		
		switch(result) {
		case FAIL:
			goPage = "redirect:/board/boardList";
			break;
		default:
			goPage = "redirect:/board/boardList";
			break;
		}
		return goPage;
	}
}
