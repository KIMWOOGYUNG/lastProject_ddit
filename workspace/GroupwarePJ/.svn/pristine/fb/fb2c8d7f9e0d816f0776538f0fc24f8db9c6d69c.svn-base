package kr.or.ddit.schedule.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.schedule.service.ICom_ScheduleService;
import kr.or.ddit.vo.Com_ScheduleVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.SearchVO;

@Controller
public class Com_ScheduleController {
	
	@Inject
	ICom_ScheduleService service;
	
	@GetMapping(value="/plan/companyplan", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<Com_ScheduleVO> ajaxForlist(
		@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
		SearchVO searchVO, Model model
		){
		complanList(currentPage, searchVO, model);
		return (PagingVO<Com_ScheduleVO>) model.asMap().get("pagingVO");
	}

	//회사 일정 목록
	@GetMapping("/plan/companyplan")
	public String complanList(@RequestParam(name="page", required = false, defaultValue = "1") int currentPage,
			SearchVO searchVO, Model model) {
		PagingVO<Com_ScheduleVO> pagingVO = new PagingVO<>();
		pagingVO.setSearchVO(searchVO);
		pagingVO.setCurrentPage(currentPage);
		int totalRecord = service.readCom_ScheduleCount(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		
		List<Com_ScheduleVO> comList = service.readScheduleList(pagingVO);
		pagingVO.setDataList(comList);
		
		model.addAttribute("pagingVO", pagingVO);
		
		return "ComSchedule.plan";
	}
	
	//회사 일정 삭제(체크박스)
	@PostMapping("/plan/companyplan/deletecom")
	public String deletecomplan(@RequestParam String cs_code, Model model, HttpSession session) {
	
	if(cs_code.contains(",")) {
		String[] splited = cs_code.split(",");
		for(int i=0; i< splited.length; i++) {
			service.deleteCom(splited[i]);
		}
	}else {
		service.deleteCom(cs_code);
	}
	Com_ScheduleVO comschedulevo = (Com_ScheduleVO) session.getAttribute("authUser");
	model.addAttribute("who", comschedulevo.getCs_code());
	return "ComSchedule.plan";
	}
	
	
	//회사일정캘린더
	@GetMapping("/plan/complancalendar")
	public String complancalendar() {
		String goPage="ComScheduleCalendar.plan";
		return goPage;
	}
	
	//회사 상세 일정
	@GetMapping("/plan/DetailComSchedule")
	public String detailcomplan() {
		String goPage="DetailComSchedule.plan";
		return goPage;
	}
	
	//회사 일정 등록
	@GetMapping("/plan/ComScheduleEnroll")
	public String complanenroll() {
		String goPage="ComScheduleEnroll.plan";
		return goPage;
	}
	
	
}
