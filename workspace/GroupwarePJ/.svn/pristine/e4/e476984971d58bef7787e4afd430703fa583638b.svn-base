package kr.or.ddit.project.controller;

import javax.inject.Inject;
import javax.validation.Valid;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.enums.ResultState;
import kr.or.ddit.hr_admin.dao.IAdminEmployDAO;
import kr.or.ddit.hr_admin.service.IAdminDepartService;
import kr.or.ddit.hr_admin.service.IAdminEmployService;
import kr.or.ddit.project.dao.IPJStandardDAO;
import kr.or.ddit.project.service.IProjectListService;
import kr.or.ddit.vo.ProjectVO;

@Controller
public class ProjectFormController {
	
	@Inject
	IProjectListService service;
	@Inject
	IAdminDepartService deptService;
	@Inject
	IPJStandardDAO stdDao;
	@Inject
	IAdminEmployService empService;
	
	
	private void attibuteSetting(Model model){
		model.addAttribute("deptList", deptService.selectDeptList());
		model.addAttribute("impList", stdDao.selectImportant());
		model.addAttribute("sttList", stdDao.selectStatus());
		model.addAttribute("tskList", stdDao.selectTaskType());
	}
	
	//프로젝트 등록 폼
	@GetMapping("/project/newProject")
	public String newProject(Model model) {
		attibuteSetting(model);
		return "newProject.project";
	}
	
	//프로젝트 수정 폼
	@GetMapping("/project/editProject/{project_code}")
	public String editProject(@PathVariable String project_code, Model model) {
		attibuteSetting(model);
		ProjectVO vo = service.selectProject(project_code);
		model.addAttribute("project", vo);
		return "newProject.project";
	}
	

	
	//프로젝트 수정
	@PostMapping("/project/updateProject")
	public String update(
		@Valid @ModelAttribute("project") ProjectVO project, @RequestParam String project_code,
		BindingResult errors, Model model,
		RedirectAttributes redirectAttributes
	){
		String goPage = null;
		String message = null;
		if (!errors.hasErrors()) {
			ResultState result = service.updateProject(project);
			switch (result) {
			case FAIL:
				message = "잠시 후 다시 시도해주세요.";
				redirectAttributes.addFlashAttribute("board", project);
				goPage = "redirect:/project/newProject/{project_code}";
				break;
			default: // OK
				goPage = "redirect:/project/projectlist/{who}";
				break;  
			}
		} else {
			goPage = "redirect:/project/newProject/{project_code}";
			redirectAttributes.addFlashAttribute("project", project);
			redirectAttributes.addFlashAttribute("org.springframework.validation.BindingResult.board", errors);
		}

		model.addAttribute("message", message);

		return goPage;
		
	}
	
}
