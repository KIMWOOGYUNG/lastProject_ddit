package kr.or.ddit.work.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.vo.EmployeeVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;
import kr.or.ddit.vo.WorkLogVO;
import kr.or.ddit.work.service.IMyWorkLogService;

@Controller
public class MyDiaryReadController {
	
	@Inject
	private IMyWorkLogService service;
	
	@GetMapping(value = "/work/mywork/daydiaryview/{wl_code}")
	public String daydaiaryView(@PathVariable(required = true) String wl_code, Model model) {
		WorkLogVO worklog = service.readWorkLogday(wl_code);
		
		model.addAttribute("worklog", worklog);
		
		return "mydaydiaryView.work";
	}
	
	
	@GetMapping(value = "/work/mywork/{pos}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<WorkLogVO> ajaxForlistweek(@RequestParam(name="page", required = false, defaultValue = "1") int currentPage, Model model,  HttpSession session,@PathVariable(name = "pos") String pos){
		weekdaiaryList(currentPage, model,session,pos);
		return (PagingVO<WorkLogVO>) model.asMap().get("pagingVO");
	}
	
	@GetMapping("/work/mywork/{pos}")
	public String weekdaiaryList(@RequestParam(name = "page", required = false, defaultValue = "1")int currentPage , Model model, HttpSession session, @PathVariable(name = "pos") String pos) {
		String goPage = null;
		EmployeeVO employeeVO =(EmployeeVO) session.getAttribute("authUser");
		 PagingVO<WorkLogVO> pagingVO = new PagingVO<>();
		 WorkLogVO worklog = new WorkLogVO();
		 worklog.setEmp_code(employeeVO.getEmp_code());
		
		 if(pos.equals("weekdiary")) {
			 worklog.setWl_catag("WLC200");
			 goPage = "myweekdiaryList.work";	
		 }else if(pos.equals("daydiary")) {
			 worklog.setWl_catag("WLC100");
			 goPage ="mydaydiaryList.work";
		 }else if(pos.equals("trashbasket")) {
			 worklog.setWl_del("Y");
			 goPage = "mytrashbasket.work";
		 }else {
			 // �̻��� ��ö
		 }
		 
		pagingVO.setDetailSearch(worklog);
		pagingVO.setCurrentPage(currentPage);

		int totalRecord = service.readWorkLogCountday(pagingVO);
		pagingVO.setTotalRecord(totalRecord);
		List<WorkLogVO> worklogListday = service.readWorkLogListday(pagingVO);
		pagingVO.setDataList(worklogListday);

		
		model.addAttribute("pagingVO", pagingVO);
		model.addAttribute("wl_catag", pos);
		
		return goPage;		
	}

	@GetMapping(value = "/work/mywork/weekdiaryview/{wl_code}")
	public String weekdaiaryView(@PathVariable(required = true) String wl_code, Model model) {
		WorkLogVO worklog = service.readWorkLogweek(wl_code);
		
		model.addAttribute("worklog", worklog);
		
		return "myweekdiaryView.work";
	}


	
	
}
