package kr.or.ddit.approval.service;

import java.util.List;

import javax.inject.Inject;

import org.springframework.stereotype.Repository;
import org.springframework.stereotype.Service;

import kr.or.ddit.approval.dao.IApprovalDAO;
import kr.or.ddit.enums.ResultState;
import kr.or.ddit.vo.Appr_OrderVO;
import kr.or.ddit.vo.Appr_StatVO;
import kr.or.ddit.vo.Approve_LineVO;
import kr.or.ddit.vo.DraftVO;
import kr.or.ddit.vo.Draft_AttatchVO;
import kr.or.ddit.vo.PagingVO;

@Service
public class ApprovalServiceImpl implements IApprovalService {
	@Inject
	IApprovalDAO dao;

	@Override
	public List<DraftVO> getTempFolder(PagingVO<DraftVO> pagingVO) {
		return dao.selectTempFolder(pagingVO);
	}

	@Override
	public DraftVO getDraft(String draft_code) {
		return dao.selectDraft(draft_code);
	}

	@Override
	public List<Approve_LineVO> getApprLine(String emp_code) {
		return dao.selectApproveLine(emp_code);
	}

	@Override
	public List<Appr_StatVO> getApprLineStat(String draft_code) {
		return dao.selectApproveStat(draft_code);
	}

	@Override
	public int getApproveCount(PagingVO<DraftVO> pagingVO) {
		return dao.selectApproveCount(pagingVO);
	}

	@Override
	public ResultState createApprEmpStat(Appr_StatVO appr_StatVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.insertApproveStat(appr_StatVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState createApprLine(Approve_LineVO approve_LineVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.insertApproveLine(approve_LineVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState createApprEmpOrder(Appr_OrderVO appr_OrderVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.insertApproveOrder(appr_OrderVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState createDraft(DraftVO draftVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.insertDraft(draftVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState createDraftAttatch(Draft_AttatchVO attatchVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.insertDraftAttatch(attatchVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState setDarft(DraftVO draftVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.updateDarft(draftVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState setApprLine(Approve_LineVO approve_LineVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.updateApproveLine(approve_LineVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState setApprEmpStat(Appr_StatVO appr_StatVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.updateApproveStat(appr_StatVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeDraft(DraftVO draftVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.deleteDraft(draftVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeDraftAttatch(Draft_AttatchVO attatchVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.deleteDraftAttatch(attatchVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeAllDraftAttatch(DraftVO draftVO) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.deleteAllDraftAttatch(draftVO);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeAllApprOrder(String appr_line_code) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.deleteAllApproveOrder(appr_line_code);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeApprEmpOrder(String appr_order_code) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.delteApproveOrder(appr_order_code);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}

	@Override
	public ResultState removeApprLine(String appr_line_code) {
		ResultState state = ResultState.FAIL;

		int cnt = dao.deleteApproveLine(appr_line_code);
		if (cnt > 0) {
			state = ResultState.SUCCESSES;
		}

		return state;
	}
	
	
	

}
