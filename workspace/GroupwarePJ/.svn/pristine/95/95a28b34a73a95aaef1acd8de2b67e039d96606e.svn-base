package kr.or.ddit.approval.controller;

import java.util.List;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.approval.service.IApprovalService;
import kr.or.ddit.vo.Approve_LineVO;
import kr.or.ddit.vo.DraftVO;
import kr.or.ddit.vo.EmployeeVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.SearchVO;

@Controller
@RequestMapping("approval")
public class ApprovalSettingController {
	
	@Inject
	IApprovalService service;
	
	
	@GetMapping("setting/{state}")
	public String goSetting(@PathVariable(name = "state") String state, Model model,HttpSession session
			,@RequestParam(name="page", required = false, defaultValue = "1") int currentPage)	{
		
		String goPage = "lineSetting.approval";
		model.addAttribute("state", state);
		if("apprLine".equals(state)) {
			model.addAttribute("title", "결재라인 그룹 관리");
		}else if("rg1Line".equals(state)) {
			model.addAttribute("title", "참조자 그룹 관리");
		}else if("rg2Line".equals(state)) {
			model.addAttribute("title", "열람권자 그룹 관리");
		}
		
		EmployeeVO employeeVO =(EmployeeVO) session.getAttribute("authUser");
		
		Approve_LineVO detailsearch = new Approve_LineVO();
		detailsearch.setEmp_code(employeeVO.getEmp_code());
		
		PagingVO<Approve_LineVO> pagingVO = new PagingVO<Approve_LineVO>();
		pagingVO.setDetailSearch(detailsearch);
		pagingVO.setCurrentPage(currentPage);
		
		List<Approve_LineVO> dataList = service.getApprLine(pagingVO);
		int totalRecord = service.getApprLineCount(pagingVO);
		
		new dataSetting<Approve_LineVO>().addData(pagingVO, totalRecord, dataList, model);
		
		return goPage;
	}
	
	@GetMapping("setting/{state}/add")
	public String goAdd(@PathVariable(name = "state") String state, Model model)	{
		
		String goPage = "lineEdite.approval";
		if("apprLine".equals(state)) {
			model.addAttribute("title", "결재라인 그룹 추가");
		}else if("rg1Line".equals(state)) {
			model.addAttribute("title", "참조자 그룹 추가");
		}else if("rg2Line".equals(state)) {
			model.addAttribute("title", "열람권자 그룹 추가");
		}
		
		
		
		return goPage;
	}
	
	
	
	@GetMapping(value="setting/{state}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public PagingVO<DraftVO> ajaxForlist(
			@PathVariable(name = "state") String state, Model model,HttpSession session
			,@RequestParam(name="page", required = false, defaultValue = "1") int currentPage
		){
		goSetting(state, model, session, currentPage);
		return (PagingVO<DraftVO>) model.asMap().get("pagingVO");
	}
	
	class dataSetting<T>{
		private  void addData(PagingVO<T> pagingVO, int totalRecord, List<T> dataList,Model model ) {
			pagingVO.setTotalRecord(totalRecord);
			pagingVO.setDataList(dataList);
			
			model.addAttribute("pagingVO", pagingVO);
		}
			
			
			
		
	}
	
	
	
}
