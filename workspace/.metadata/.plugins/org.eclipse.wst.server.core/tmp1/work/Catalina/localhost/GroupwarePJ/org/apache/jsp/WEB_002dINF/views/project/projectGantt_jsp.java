/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-08-11 05:01:20 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.project;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class projectGantt_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(4);
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1593409600303L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1588032890000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar", Long.valueOf(1593409602202L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- <script async=\"\" src=\"//www.google-analytics.com/analytics.js\"></script> -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/gantt/codebase/dhtmlxgantt.js\"></script>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/gantt/codebase/dhtmlxgantt.css\">\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(" \t#content {padding: 50px;} \r\n");
      out.write("\thtml, body {\r\n");
      out.write("/* \t\theight: 80%; */\r\n");
      out.write("/* \t\tpadding: 0px; */\r\n");
      out.write("/* \t\tmargin: 0px; */\r\n");
      out.write("/* \t\toverflow: hidden; */\r\n");
      out.write("\t}\r\n");
      out.write("\t.imp {\r\n");
      out.write("  \t    font-weight:bold;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("<!-- \t<h1>Gantt</h1> -->\r\n");
      out.write("\t<section class=\"content-header\">\r\n");
      out.write("\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t<span class=\"imp\">중요도</span>&nbsp;\r\n");
      out.write("\t\t\t<span class=\"oi oi-minus text-danger\"></span>&nbsp;<span>높음</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<span class=\"oi oi-minus text-warning\"></span>&nbsp;<span>중간</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t<span class=\"oi oi-minus text-info\"></span>&nbsp;<span>낮음</span>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<div id=\"gantt_here\" style='width:100%; height:800px; position:relative;'></div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<!-- 모달 -->\r\n");
      out.write("<!-- 모달 -->\r\n");
      out.write("<div id=\"ganttModal\" class=\"modal fade\">\r\n");
      out.write("\t<div class=\"modal-dialog\">\r\n");
      out.write("\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h4 id=\"modalTitle\" class=\"modal-title\"></h4>\r\n");
      out.write("\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("\t\t\t\t\t<span aria-hidden=\"true\">×</span> <span class=\"sr-only\">close</span>\r\n");
      out.write("\t\t\t\t</button>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t<table class=\"table table-bordered\" id=\"modal\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>일감명</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalTaskName\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>담당자</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalEmp\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>시작일</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalStart\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>종료일</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalEnd\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>중요도</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalImportant\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>진척도</th>\r\n");
      out.write("\t\t\t\t\t\t<td><span class=\"modalProgress\"></span></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\t\r\n");
      out.write("\t//간트 초기화\r\n");
      out.write("\tgantt.init(\"gantt_here\");\r\n");
      out.write("\tgantt.config.drag_progress = false;\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t//색깔\r\n");
      out.write("// \tgantt.gantt_task_progress {\r\n");
      out.write("// \t    background-color: rgb(54, 54, 54);\r\n");
      out.write("// \t    opacity: 0.2;\r\n");
      out.write("// \t}\r\n");
      out.write("\t\r\n");
      out.write("\t//리스트 정보 받아오기\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl : '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/projectplan/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${project_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ganttList',\r\n");
      out.write("\t\ttype : \"POST\",\r\n");
      out.write("\t\tsuccess : function(resp){\r\n");
      out.write("\t\t \tvar taskList = resp;\r\n");
      out.write("\t\t\tvar data = [];\r\n");
      out.write("\t\t\tconsole.log(taskList);\r\n");
      out.write("\t\t\t$.each(taskList, function(i,task){\r\n");
      out.write("\t\t\t\teachData = {}\r\n");
      out.write("\t\t\t\teachData.id = task.task_code;\r\n");
      out.write("\t\t\t\teachData.text = task.task_name;\r\n");
      out.write("\t\t\t\teachData.start_date = task.task_start;\r\n");
      out.write("\t\t\t\teachData.duration = task.duration;\r\n");
      out.write("\t\t\t\teachData.progress = task.progress_double;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tlet color = \"\";\r\n");
      out.write("\t\t\t\tif(task.task_important == \"IMP100\"){\r\n");
      out.write("\t\t\t\t\tcolor = \"#ff4d4d\";\r\n");
      out.write("\t\t\t\t}else if(task.task_important == \"IMP200\") {\r\n");
      out.write("\t\t\t\t\tcolor = \"#ffd633\";\r\n");
      out.write("\t\t\t\t}else {\r\n");
      out.write("\t\t\t\t\tcolor = \"#3399ff\";\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\teachData.color = color;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tdata.push(eachData)\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 위 작업을 해주지 않으려면 구조를 변경해줄 수 있다.\r\n");
      out.write("\t\t\t\t// 1. 클라이언트 사이드 : gantt.parse의 api 찾아서 커스터마이징\r\n");
      out.write("\t\t\t\t// 2. 서버 사이드 : vo에서 jsonProperty(\"\") 를 통해 json으로 나갈때의 이름 설정\r\n");
      out.write("\t\t\t});\r\n");
      out.write("\t\t\tparse(data);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t//간트 데이터 파싱\r\n");
      out.write("\tfunction parse(data){\r\n");
      out.write("\t\tgantt.parse({\r\n");
      out.write("\t\t\tdata: data\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//일감 추가버튼 삭제\r\n");
      out.write("\t\t$(\".gantt_grid_head_add\").remove();\r\n");
      out.write("\t\t$(\".gantt_add\").remove();\r\n");
      out.write("\t}\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("// \t일감 읽기전용 (수정불가)\r\n");
      out.write("// \tgantt.config.readonly = true;\r\n");
      out.write("// \tgantt.config.readonly_property = \"property_name\";\r\n");
      out.write("\t\r\n");
      out.write("\t//일정 클릭시\r\n");
      out.write("\tgantt.attachEvent(\"onTaskClick\", function(id, e){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/projectplan/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${project_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/ganttEach\",\r\n");
      out.write("\t\t\tdataType : \"json\",\r\n");
      out.write("\t\t\tcontentType : \"application/json; charset=UTF-8\",\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\ttask_code : id\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tsuccess : function(resp){\r\n");
      out.write("// \t\t\t\tconsole.log(\"resp\"+resp);\r\n");
      out.write("\t\t\t\tlet name = resp.task_name;\r\n");
      out.write("\t\t\t\tlet start = resp.task_start;\r\n");
      out.write("\t\t\t\tlet end = resp.task_end;\r\n");
      out.write("\t\t\t\tlet emp = resp.emp_kor;\r\n");
      out.write("\t\t\t\tlet important = resp.task_important;\r\n");
      out.write("\t\t\t\tlet progress = resp.task_progress;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t$(\"#modalTitle\").text('일감 상세정보');\r\n");
      out.write("\t\t    \t$(\"#okBtn\").text('삭제');\r\n");
      out.write("\t\t    \t$(\".modalTaskName\").text(name);\r\n");
      out.write("\t\t    \t$(\".modalEmp\").text(emp);\r\n");
      out.write("\t\t    \t$(\".modalStart\").text(start);\r\n");
      out.write("\t\t    \t$(\".modalEnd\").text(end);\r\n");
      out.write("\t\t    \t$(\".modalImportant\").text(important);\r\n");
      out.write("\t\t    \t$(\".modalProgress\").text(progress);\r\n");
      out.write("\t\t    \t$('#ganttModal').modal();\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t,error: function(e){\r\n");
      out.write("\t\t\t\talert(e);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\treturn true;\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("\t//날짜 형식 변환\r\n");
      out.write("\tfunction formatDate1(date) {\r\n");
      out.write("\t    var d = new Date(date),\r\n");
      out.write("\t        month = '' + (d.getMonth() + 1),\r\n");
      out.write("\t        day = '' + d.getDate(),\r\n");
      out.write("\t        year = d.getFullYear();\r\n");
      out.write("\r\n");
      out.write("\t    if (month.length < 2) \r\n");
      out.write("\t        month = '0' + month;\r\n");
      out.write("\t    if (day.length < 2) \r\n");
      out.write("\t        day = '0' + day;\r\n");
      out.write("\r\n");
      out.write("\t    return [year, month, day].join('-');\r\n");
      out.write("\t}\r\n");
      out.write("\tfunction formatDate2(date) {\r\n");
      out.write("\t    var d = new Date(date),\r\n");
      out.write("\t        month = '' + (d.getMonth() + 1),\r\n");
      out.write("\t        day = '' + (d.getDate() - 1),\r\n");
      out.write("\t        year = d.getFullYear();\r\n");
      out.write("\r\n");
      out.write("\t    if (month.length < 2) \r\n");
      out.write("\t        month = '0' + month;\r\n");
      out.write("\t    if (day.length < 2) \r\n");
      out.write("\t        day = '0' + day;\r\n");
      out.write("\r\n");
      out.write("\t    return [year, month, day].join('-');\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t//일감 드래그시 일정 업데이트\r\n");
      out.write("\tgantt.attachEvent(\"onAfterTaskDrag\", function(id, mode, task){\r\n");
      out.write("//     \tconsole.log(arguments);\r\n");
      out.write("\t\ttask = gantt.getTask(id);\r\n");
      out.write("\t\tstart_date = task.start_date;\r\n");
      out.write("\t\tend_date = task.end_date;\r\n");
      out.write("\t\tstart_date = formatDate1(start_date);\r\n");
      out.write("\t\tend_date = formatDate2(end_date);\r\n");
      out.write("\t\tconsole.log(\"start : \" + start_date + \" , end : \" + end_date);\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif(confirm(\"일정을 수정하시겠습니까?\")){\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t    \t\t url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/project/projectplan/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${project_code}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/updateGantt\",\r\n");
      out.write("\t    \t\t type : \"POST\",\r\n");
      out.write("\t    \t\t data : {\r\n");
      out.write("\t    \t\t\t task_code : id,\r\n");
      out.write("\t    \t\t\t task_start : start_date,\r\n");
      out.write("\t    \t\t\t task_end : end_date\r\n");
      out.write("\t    \t\t },\r\n");
      out.write("\t    \t\t dataType : \"html\",\r\n");
      out.write("\t    \t\t success : function(resp){\r\n");
      out.write("\t    \t\t\t alert(resp);\r\n");
      out.write("\t    \t\t }\r\n");
      out.write("\t    \t});\r\n");
      out.write("\t    }\r\n");
      out.write("\t});\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
