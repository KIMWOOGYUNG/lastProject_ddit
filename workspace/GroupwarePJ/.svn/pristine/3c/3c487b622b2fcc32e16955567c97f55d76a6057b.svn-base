package kr.or.ddit.project.service;

import java.util.List;

import kr.or.ddit.enums.ResultState;
import kr.or.ddit.vo.EmployeeVO;
import kr.or.ddit.vo.PJ_MemberVO;
import kr.or.ddit.vo.PJ_RgroupVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.Project_roleVO;

public interface IProjectListService {
	/**
	 * 새 프로젝트 추가
	 * @param project
	 * @return
	 */
	public ResultState insertProject(ProjectVO project);
	/**
	 * 등록된 프로젝트의 개수 구하기
	 * @param pagingVO
	 * @return
	 */
	public int selectProjectCount(PagingVO<ProjectVO> pagingVO);
	/**
	 * 프로젝트 목록을 리스트에 담기
	 * @param pagingVO
	 * @return
	 */
	public List<ProjectVO> selectProjectList(PagingVO<ProjectVO> pagingVO);
	/**
	 * 프로젝트 하나를 선택해서 상세정보 가져오기
	 * @param project_code
	 * @return
	 */
	public ProjectVO selectProject(String project_code);
	/**
	 * 프로젝트 수정
	 * @param project
	 * @return
	 */
	public ResultState updateProject(ProjectVO project);
	/**프로젝트 삭제
	 * @param project
	 * @return
	 */
	public ResultState deleteProject(String project_code);
	
	/**일감 등록시 로그인한 사원이 속한 프로젝트 목록을 조회
	 * @param emp_code
	 * @return
	 */
	public List<ProjectVO>selectProjectListForTask(String emp_code);
	
	
	/**프로젝트 등록시 팀원추가에서 조회할 사원들
	 * @param pagingVO
	 * @return
	 */
	public List<EmployeeVO>selectEmpList(PagingVO<EmployeeVO> pagingVO);
	
	/**프로젝트 등록시 팀원추가에서 검색 조건에 맞는 사원 수 
	 * @param pagingVO
	 * @return
	 */
	public int readEmpCount(PagingVO<EmployeeVO> pagingVO);
	
	/**프로젝트 등록시 역할 선택
	 * @return
	 */
	public List<Project_roleVO>selectRoleList();
	
	/**프로젝트 구성원 리스트 조회
	 * @param project_code
	 * @return
	 */
	public List<PJ_RgroupVO>selectPJ_Rgroup(String project_code);
}
