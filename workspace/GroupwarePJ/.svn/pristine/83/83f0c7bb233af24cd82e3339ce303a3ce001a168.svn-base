package kr.or.ddit.project.controller;

import javax.inject.Inject;
import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.Errors;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.enums.ResultState;
import kr.or.ddit.hr_admin.service.IAdminDepartService;
import kr.or.ddit.project.dao.IPJStandardDAO;
import kr.or.ddit.project.service.IProjectListService;
import kr.or.ddit.project.service.ITaskListService;
import kr.or.ddit.vo.EmployeeVO;
import kr.or.ddit.vo.ProjectVO;
import kr.or.ddit.vo.TaskVO;

@Controller
public class TaskFormController {
	
	@Inject
	ITaskListService service;
	@Inject
	IAdminDepartService deptService;
	@Inject
	IPJStandardDAO stdDao;
	@Inject
	IProjectListService pjService;
	
	private void attibuteSetting(Model model){
		model.addAttribute("deptList", deptService.selectDeptList());
		model.addAttribute("impList", stdDao.selectImportant());
		model.addAttribute("sttList", stdDao.selectStatus());
		model.addAttribute("tskList", stdDao.selectTaskType());  
	}
	
	
	@GetMapping("/project/newTask/{whoseTask}/{project_code}")
	public String newTask(@ModelAttribute("task") TaskVO task, Model model, HttpSession session, @PathVariable String whoseTask, @ModelAttribute(name="projectCommon") ProjectVO projectVO) {
		attibuteSetting(model);
		
		EmployeeVO employeeVO = (EmployeeVO) session.getAttribute("authUser");
		model.addAttribute("projectListForTask", pjService.selectProjectListForTask(employeeVO.getEmp_code()));
		model.addAttribute("authUser", employeeVO);
		model.addAttribute("whoseTask",whoseTask);
		model.addAttribute("project", projectVO);
		
		return "newTask.project";
	}
	
	@PostMapping(value = "/project/newTask/{whoseTask}", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	public String insertTask(@Valid @ModelAttribute("task") TaskVO taskVO, Errors errors, Model model, HttpSession session, @PathVariable String whoseTask, RedirectAttributes redirectAttributes) {
		EmployeeVO employeeVO = (EmployeeVO) session.getAttribute("authUser");
		
		String emp_code = employeeVO.getEmp_code();
		String pj_memcode = service.selectPJ_Member(emp_code);
		taskVO.setPj_memcode(pj_memcode);
		
		String goPage = null;
		String message = null;
		if(!errors.hasErrors()) {
			ResultState result = service.insertTask(taskVO);
			System.out.println(result);
			switch (result) {
			case FAIL:
				goPage = "newTask.project";
				message = "다시 입력하세요";
				model.addAttribute("message", message);
				break;

			default:
				goPage = "redirect:/project/tasklist/"+taskVO.getProject_code()+"/{whoseTask}";
				message = "insert성공";
				redirectAttributes.addFlashAttribute("message", message);
				break;
			}
			
		}else {
			goPage = "newTask.project";
			model.addAttribute("message", message);
		}
		
		
		return goPage;
	}
	
	@GetMapping("/project/editTask")
	public String editProject(@RequestParam String task_code, Model model) {
		attibuteSetting(model);
		TaskVO vo = service.selectTask(task_code);
		model.addAttribute("task", vo);
		
		return "newProject.project";
	}
}
