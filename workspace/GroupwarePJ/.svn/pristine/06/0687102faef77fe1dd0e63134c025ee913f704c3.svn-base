package kr.or.ddit.addr.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.inject.Inject;

import org.springframework.http.MediaType;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.addr.service.IaddrService;
import kr.or.ddit.vo.DepartmentVO;
import kr.or.ddit.vo.EmployeeVO;
import kr.or.ddit.vo.PagingVO;
import kr.or.ddit.vo.TeamVO;

@Controller
@RequestMapping("address")
public class AddrController {
	@Inject
	IaddrService service;
//	@GetMapping("myaddressList")
//	public String AddressList(@ModelAttribute(name = "cate")String cate, Model model) {
//		String goPage = "myaddressList.address";
//		System.out.println("cate��"+cate);
//		if(cate.equals("myenjoy")) {
//			model.addAttribute("title","���ã�� ");
//		}else if(cate.equals("account")){
//			model.addAttribute("title","�ŷ�ó ");
//		}else {
//			
//		}
//		return goPage;
//		
// }
//	@GetMapping("myaddressList")
//	public String AddressList(Model model) {
//		String goPage = "addressList.address";
//		return goPage;
//		
//	}

	@GetMapping(value = "dept", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<DepartmentVO> getdeptList() {
		sendAddressMap();

		return service.readDepartmentList();
	}

//	@GetMapping(value = "team", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
//	@ResponseBody
//	public List<TeamVO> getteamList(String dept_code) {
//		return service.readTeamList(dept_code);
//	}


	
//	@GetMapping(value = "emp", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
//	@ResponseBody
//	public List<EmployeeVO> getEmpList(String team_code) {
//		EmployeeVO employeeVO = new EmployeeVO();
//		employeeVO.setTeam_code(team_code);
//		PagingVO<EmployeeVO> pagingVO = new PagingVO<EmployeeVO>();
//		pagingVO.setDetailSearch(employeeVO);
//		return service.readAddrList(pagingVO);
//	}
	
	@GetMapping(value = "emp", produces = MediaType.APPLICATION_JSON_UTF8_VALUE)
	@ResponseBody
	public List<Map<String, Object>> sendAddressMap() {
		List<Map<String, Object>> sendList = new ArrayList<Map<String, Object>>();

		List<DepartmentVO> deptList = service.readDepartmentList();

		for (DepartmentVO tempDept : deptList) {
			HashMap<String, Object> deptMap = new HashMap<String, Object>();
			deptMap.put("title", tempDept.getDept_name());
			deptMap.put("key", tempDept.getDept_code());

			List<TeamVO> teamList = service.readTeamList(tempDept.getDept_code());
			deptMap.put("isFolder", true);

			if (!teamList.isEmpty()) {
				List<HashMap<String, Object>> teamChildrenList =new  ArrayList<HashMap<String, Object>>();
				for (TeamVO tempTeam : teamList) {
					HashMap<String, Object> teamMap = new HashMap<String, Object>();

					teamMap.put("title", tempTeam.getTeam_name());
					teamMap.put("key", tempTeam.getTeam_code());

					EmployeeVO employeeVO = new EmployeeVO();
					employeeVO.setTeam_code(tempTeam.getTeam_code());
					PagingVO<EmployeeVO> pagingVO = new PagingVO<EmployeeVO>();
					pagingVO.setDetailSearch(employeeVO);
					List<EmployeeVO> empList = service.readAddrList(pagingVO);

					
					List<HashMap<String, Object>> empChildrenList =new  ArrayList<HashMap<String, Object>>();
					teamMap.put("isFolder", true);
					if (!empList.isEmpty()) {
						for (EmployeeVO tempEmp : empList) {
							HashMap<String, Object> empMap = new HashMap<String, Object>();
							empMap.put("title", tempEmp.getEmp_kor() + "(" + tempEmp.getPosition_code() + ")");
							empMap.put("key", tempEmp.getEmp_code());
							empChildrenList.add(empMap);
						}
						teamMap.put("children", empChildrenList);
					}
					teamChildrenList.add(teamMap);
				}
				deptMap.put("children", teamChildrenList);
			}
			sendList.add(deptMap);
		}
		return sendList;
	}
}
