/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.54
 * Generated at: 2020-08-18 11:35:52 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.plan;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class MyScheduleCalendar_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(5);
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring-form.tld", Long.valueOf(1588032890000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1593409600303L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar!/META-INF/spring.tld", Long.valueOf(1588032890000L));
    _jspx_dependants.put("/WEB-INF/lib/spring-webmvc-4.3.27.RELEASE.jar", Long.valueOf(1593409602202L));
    _jspx_dependants.put("jar:file:/D:/A_TeachingMaterial/7.LastProject/workspace/.metadata/.plugins/org.eclipse.wst.server.core/tmp1/wtpwebapps/GroupwarePJ/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153352682000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fif_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("    \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("  <!-- fullCalendar -->\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar/main.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-daygrid/main.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-timegrid/main.min.css\">\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-bootstrap/main.min.css\">\r\n");
      out.write("  \r\n");
      out.write("<style>\r\n");
      out.write("  #calendar {\r\n");
      out.write("    max-width: auto;\r\n");
      out.write("    margin: 0 auto;\r\n");
      out.write("  } \r\n");
      out.write("  .content {\r\n");
      out.write("\tpadding: 50px;\r\n");
      out.write("  }\r\n");
      out.write("  .imp {\r\n");
      out.write("  \tfont-weight:bold;\r\n");
      out.write("  }\r\n");
      out.write("  .container-fluid{\r\n");
      out.write("  \tpadding:0;\r\n");
      out.write("  }\r\n");
      out.write("  #content {\r\n");
      out.write("\tpadding: 50px;\r\n");
      out.write("  }\r\n");
      out.write("  .imp {\r\n");
      out.write("  \tfont-weight:bold;\r\n");
      out.write("  }\r\n");
      out.write("  h2{\r\n");
      out.write("  \tdisplay:inline;\r\n");
      out.write("  \tmargin-left:5px;\r\n");
      out.write("  }\r\n");
      out.write("  #tableBtn{\r\n");
      out.write("  \tmargin-left:20px;\r\n");
      out.write("  }\r\n");
      out.write("  #addSchedule{\r\n");
      out.write("  \tfloat:right;\r\n");
      out.write("  \tmargin-right:8px;\r\n");
      out.write("  }\r\n");
      out.write("</style>\r\n");
      out.write("<div id=\"content\">\r\n");
      out.write("     <h2>내 일정 캘린더</h2>\r\n");
      out.write("     <input type=\"button\" id=\"addSchedule\" value=\"일정등록\" class=\"btn btn-info btn-sm\" onclick=\"window.open('");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/msediter', '내일정등록', 'width=#, height=#')\"> \r\n");
      out.write("        \r\n");
      out.write("<!--         <button class=\"btn btn-info btn-sm\" href=\"#\" id=\"addBtn\"> -->\r\n");
      out.write("<!-- <i class=\"fas fa-pencil-alt\"></i>일정등록</button> -->\r\n");
      out.write("      <div class=\"container-fluid\">\r\n");
      out.write("\t\t<div class=\"row\">\r\n");
      out.write("\t        <div class=\"col-md-3\">\r\n");
      out.write("\t          <div class=\"sticky-top mb-3\">\r\n");
      out.write("\t            <!-- /.card -->\r\n");
      out.write("\t          </div>\r\n");
      out.write("\t        </div>\r\n");
      out.write("\t     </div>\r\n");
      out.write("\t  </div> \r\n");
      out.write("\t  <div class=\"col-md-12\">\r\n");
      out.write("      \t<div class=\"card card-primary\">\r\n");
      out.write("           <div class=\"card-body p-0\">\r\n");
      out.write("          \t\t<section class=\"content-header\">\r\n");
      out.write("\t\t\t\t\t<div class=\"container-fluid\">\r\n");
      out.write("\t\t\t\t\t\t<span class=\"imp\">중요도</span> &nbsp;\r\n");
      out.write("\t\t\t\t\t\t<span class=\"oi oi-minus text-danger\"></span>&nbsp;<span>높음</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<span class=\"oi oi-minus text-warning\"></span>&nbsp;<span>중간</span>&nbsp;&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<span class=\"oi oi-minus text-info\"></span>&nbsp;<span>낮음</span>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</section>\r\n");
      out.write("\t\t\t<div>\r\n");
      out.write("\t\t\t\t<div class=\"button showBtn\" id=\"tableBtn\"  data-target=\"#addressTable\" onclick = \"location.href = '");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/myplanbox/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type2}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("' \">\r\n");
      out.write("\t\t\t\t\t<span class=\"oi oi-list icon\"></span>\r\n");
      out.write("\t\t\t\t</div>\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("                <!-- THE CALENDAR -->\r\n");
      out.write("                <div id=\"calendar\"></div>\r\n");
      out.write("              </div>\r\n");
      out.write("              <!-- /.card-body -->\r\n");
      out.write("            </div>\r\n");
      out.write("            <!-- /.card -->\r\n");
      out.write("          </div>\r\n");
      out.write("          <!-- /.col -->\r\n");
      out.write("        </div>\r\n");
      out.write("        <!-- /.row -->\r\n");
      out.write("      \r\n");
      out.write("\r\n");
      out.write("<!-- 모달-->\r\n");
      out.write("<div id=\"calendarModal\" class=\"modal fade\">\r\n");
      out.write("<div class=\"modal-dialog\">\r\n");
      out.write("<div class=\"modal-content\">\r\n");
      out.write("<div class=\"modal-header\">\r\n");
      out.write("<h4 id=\"modalTitle\" class=\"modal-title\"></h4>\r\n");
      out.write("<button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n");
      out.write("<span aria-hidden=\"true\">×</span> <span class=\"sr-only\">close</span>\r\n");
      out.write("</button>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal-body\">\r\n");
      out.write("<table class=\"table table-bordered\" id=\"modal\">\r\n");
      out.write("<tr>\r\n");
      out.write("<th>시작일</th>\r\n");
      out.write("<td><input type=\"date\" class=\"modalStartDate\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>종료일</th>\r\n");
      out.write("<td><input type=\"date\" class=\"modalEndDate\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>일정명</th>\r\n");
      out.write("<td><input type=\"text\" class=\"modalTitleName\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>작성자</th>\r\n");
      out.write("<td><input type=\"text\" class=\"modalWriter\" name=\"emp_code\" ></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("<th>중요도</th>\r\n");
      out.write("<td>\r\n");
      out.write("<select class=\"modalImport\">\r\n");
      if (_jspx_meth_c_005fif_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</select>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("</div>\r\n");
      out.write("<div class=\"modal-footer\">\r\n");
      out.write("<button type=\"button\" id=\"okBtn\" class=\"btn btn-primary mr-2\">수정</button>\r\n");
      out.write("<button type=\"button\" class=\"btn btn-secondary\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("<!-- fullCalendar 2.2.5 -->\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/moment/moment.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar/main.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-daygrid/main.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-timegrid/main.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-interaction/main.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/resources/plugins/fullcalendar-bootstrap/main.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<script> \r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" //모달창수정가능/불가능\r\n");
      out.write("     var modalStartDate= $(\".modalStartDate\");\r\n");
      out.write("     var modalEndDate= $(\".modalEndDate\");\r\n");
      out.write("     var modalTitleName= $(\".modalTitleName\");\r\n");
      out.write("     var modalWriter=  $(\".modalWriter\");\r\n");
      out.write("     var modalImport=  $(\".modalImport\");\r\n");
      out.write("  \r\n");
      out.write(" var diseditable = function(){ //숨기고수정못하게\r\n");
      out.write(" modalStartDate.attr('disabled',true);\r\n");
      out.write(" modalEndDate.attr('disabled',true);\r\n");
      out.write(" modalTitleName.attr('disabled',true);\r\n");
      out.write(" modalWriter.attr('disabled',true);\r\n");
      out.write(" $(\"#modalImport\").attr('hidden',true);\r\n");
      out.write(" }\r\n");
      out.write(" var editable = function(){ //보여주고수정하게\r\n");
      out.write(" modalStartDate.attr('disabled',false);\r\n");
      out.write(" modalEndDate.attr('disabled',false);\r\n");
      out.write(" modalTitleName.attr('disabled',false);\r\n");
      out.write(" modalWriter.attr('disabled',false);\r\n");
      out.write(" $(\"#modalImport\").attr('hidden',false);\r\n");
      out.write(" }\r\n");
      out.write("\r\n");
      out.write(" $(\"#addBtn\").on(\"click\",function(){\r\n");
      out.write(" modalStartDate.val('');\r\n");
      out.write(" modalEndDate.val('');\r\n");
      out.write(" modalTitleName.val('');\r\n");
      out.write(" modalWriter.val('');\r\n");
      out.write(" modalImport.val('');\r\n");
      out.write(" editable();\r\n");
      out.write(" $(\"#modalTitle\").text('내일정등록');\r\n");
      out.write(" $(\"#okBtn\").text('등록');\r\n");
      out.write(" $('#calendarModal').modal();\r\n");
      out.write(" });\r\n");
      out.write("\r\n");
      out.write(" //수정또는등록\r\n");
      out.write(" $(\"#okBtn\").on(\"click\",function(){\r\n");
      out.write(" var del = ''\r\n");
      out.write(" var ms_startdate =  modalStartDate.val();//(yyyy-mm-dd)\r\n");
      out.write(" var ms_enddate =  modalEndDate.val();//(yyyy-mm-dd)\r\n");
      out.write(" var ms_title = modalEndDate.val();\r\n");
      out.write(" var standard_code = modalTitleName.val();\r\n");
      out.write(" var emp_code = modalWriter.val();\r\n");
      out.write(" var ms_important = $('input[name=\"modalImport\"]:checked').val();\r\n");
      out.write(" if($(\"#okBtn\").text()=='삭제'){\r\n");
      out.write(" $(\"#okBtn\").on(\"click\",function(){\r\n");
      out.write(" if(confirm(\"정말 삭제하시겠습니까\")==true){\r\n");
      out.write(" var del = 'y' //controller에서null return\r\n");
      out.write(" $.ajax({\r\n");
      out.write(" type : \"POST\",\r\n");
      out.write(" url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/myplancalendar\",  //삭제url\r\n");
      out.write(" data : {\r\n");
      out.write(" ms_important: modalImport,\r\n");
      out.write(" del : del\r\n");
      out.write(" },\r\n");
      out.write(" success : function(resp) {\r\n");
      out.write(" alert($(\"#okBtn\").text()+'되었습니다');\r\n");
      out.write(" $('#calendarModal').modal(\"hide\");\r\n");
      out.write(" }\r\n");
      out.write(" })//ajax\r\n");
      out.write(" }\r\n");
      out.write(" });\r\n");
      out.write(" }\r\n");
      out.write(" if($(\"#okBtn\").text()=='등록'){\r\n");
      out.write(" $.ajax({\r\n");
      out.write(" type : \"POST\",\r\n");
      out.write(" url : \"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/myplancalendar\", //업데이트url\r\n");
      out.write(" data : {\r\n");
      out.write(" ms_important: modalImport,\r\n");
      out.write(" del : del\r\n");
      out.write(" },\r\n");
      out.write(" success : function(resp) {\r\n");
      out.write(" alert($(\"#okBtn\").text()+'되었습니다');\r\n");
      out.write(" $('#calendarModal').modal(\"hide\");\r\n");
      out.write(" }\r\n");
      out.write(" })//ajax\r\n");
      out.write(" }\r\n");
      out.write(" });\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" var eventArr = [];\r\n");
      out.write(" var startdate = \"\"\r\n");
      out.write(" var enddate = \"\"  \r\n");
      out.write(" var title = \"\"\r\n");
      out.write(" var emp_kor = \"\"\r\n");
      out.write(" var content = \"\"\r\n");
      out.write(" var important = \"\"\r\n");
      out.write(" \r\n");
      out.write(" var getAttList = function(){\r\n");
      out.write(" $.ajax({\r\n");
      out.write(" url:\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/myplancalendar/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${type}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\"\r\n");
      out.write(" ,contentType: \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n");
      out.write(" ,type:\"post\"\r\n");
      out.write(" ,success : function(mp){\r\n");
      out.write(" //console.log(mp);\r\n");
      out.write(" \r\n");
      out.write(" var calendarEl = document.getElementById('calendar');\r\n");
      out.write(" var calendar = new FullCalendar.Calendar(calendarEl, {\r\n");
      out.write(" plugins: [ 'interaction', 'dayGrid', 'timeGrid', 'list','interactionPlugin' ],\r\n");
      out.write(" header: {\r\n");
      out.write(" left: 'prev,next today',\r\n");
      out.write(" center: 'title',\r\n");
      out.write(" right: 'dayGridMonth,timeGridWeek,timeGridDay,listMonth'\r\n");
      out.write(" },\r\n");
      out.write(" navLinks: true, // can click day/week names to navigate views\r\n");
      out.write(" businessHours: true, // display business hours\r\n");
      out.write(" selectable: true,\r\n");
      out.write(" selectMirror: true,\r\n");
      out.write(" eventLimit: true,\r\n");
      out.write(" navLinks: true,\r\n");
      out.write(" displayEventTime: false,\r\n");
      out.write(" height: 750,\r\n");
      out.write("allDay : false,\r\n");
      out.write(" events: mp,      //아무것도없는날짜클릭했을때->등록모달\r\n");
      out.write("  select:  function(selectionInfo) {\r\n");
      out.write("  console.log(selectionInfo);\r\n");
      out.write("selectionInfo.end.setDate(selectionInfo.end.getDate()-1);\r\n");
      out.write("\r\n");
      out.write("console.log(selectionInfo.end.toLocaleDateString());\r\n");
      out.write("date = new Date(selectionInfo.end.toLocaleDateString()); \r\n");
      out.write("var year = date.getFullYear();              //yyyy\r\n");
      out.write("var month = (1 + date.getMonth());          //M\r\n");
      out.write("month = month >= 10 ? month : '0' + month;  //month 두자리로저장\r\n");
      out.write("var day = date.getDate();                   //d\r\n");
      out.write("day = day >= 10 ? day : '0' + day;          //day 두자리로저장\r\n");
      out.write("\r\n");
      out.write("startdate = selectionInfo.startStr;\r\n");
      out.write("enddate = year + '-' + month + '-' + day;\r\n");
      out.write("//  editable();\r\n");
      out.write("//  modalTitleName.val('');\r\n");
      out.write("//  modalImport.val('');\r\n");
      out.write("//  $(\"#modalTitle\").text('내일정등록');\r\n");
      out.write("//  $(\"#okBtn\").text('등록');\r\n");
      out.write("//  modalStartDate.val(selectionInfo.startStr);\r\n");
      out.write("//  modalEndDate.val(selectionInfo.startStr);\r\n");
      out.write("//  $('#calendarModal').modal();\r\n");
      out.write("\r\n");
      out.write("  window.open(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/msediter\",\"\",'top=0, left=0, width=800, height=556, directories=no, location=no, menubar=no, resizable=no, status=yes, toolbar=no')  ;   \r\n");
      out.write("  },\r\n");
      out.write(" //이미있는이벤트를클릭했을때->수정모달\r\n");
      out.write(" eventClick: function(info) {\r\n");
      out.write("//  console.log(info);\r\n");
      out.write("//  let startdate = info.event.start;\r\n");
      out.write("//  let enddate = info.event.end;\r\n");
      out.write("//  let emp_kor = info.event.id;\r\n");
      out.write("//  let project_name = info.event._def.extendedProps.projectnm;\r\n");
      out.write("//  startdate = moment(startdate).format('YYYY-MM-DD');\r\n");
      out.write("//  enddate = moment(enddate).format('YYYY-MM-DD');\r\n");
      out.write("//  diseditable();\r\n");
      out.write("//  $(\"#modalTitle\").text('내일정수정');\r\n");
      out.write("//  $(\"#okBtn\").text('삭제');\r\n");
      out.write("//  $(\".modalWriter\").val(emp_kor);\r\n");
      out.write("//  $(\".modalStartDate\").val(startdate);\r\n");
      out.write("//  $(\".modalEndDate\").val(enddate);\r\n");
      out.write("//  $(\".modalTitleName\").val(info.event.title);\r\n");
      out.write("//  $(\".modalProject\").val(project_name);\r\n");
      out.write("//  $(\".modalImport\").find(\"option\").each(function(index){\r\n");
      out.write("//  if($(this).text()==emp_kor){\r\n");
      out.write("//  $(\".modalImport\").val($(this).val());\r\n");
      out.write("//  }\r\n");
      out.write("//  });\r\n");
      out.write("//  $('#calendarModal').modal();\r\n");
      out.write(" console.log(info);\r\n");
      out.write(" content = info.event.extendedProps.content;\r\n");
      out.write("emp_kor = info.event.id;\r\n");
      out.write("     startdate = info.event.start;\r\n");
      out.write("     startdate = moment(startdate).format('YYYY-MM-DD');\r\n");
      out.write("     enddate = info.event.end;\r\n");
      out.write("     enddate = moment(enddate).format('YYYY-MM-DD');\r\n");
      out.write(" title = info.event.title;\r\n");
      out.write(" important = info.event.extendedProps.ms_important;\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write(" window.open(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${cPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("/plan/msediter\",\"\",'top=0, left=0, width=800, height=556, directories=no, location=no, menubar=no, resizable=no, status=yes, toolbar=no')  ;   \r\n");
      out.write(" }\r\n");
      out.write(" });\r\n");
      out.write(" calendar.render();\r\n");
      out.write(" }\r\n");
      out.write(" });\r\n");
      out.write(" }\r\n");
      out.write(" getAttList();\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write(" </script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fif_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:if
    org.apache.taglibs.standard.tag.rt.core.IfTag _jspx_th_c_005fif_005f0 = (org.apache.taglibs.standard.tag.rt.core.IfTag) _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.IfTag.class);
    boolean _jspx_th_c_005fif_005f0_reused = false;
    try {
      _jspx_th_c_005fif_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fif_005f0.setParent(null);
      // /WEB-INF/views/plan/MyScheduleCalendar.jsp(122,0) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fif_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${not empty myimportantnm}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fif_005f0 = _jspx_th_c_005fif_005f0.doStartTag();
      if (_jspx_eval_c_005fif_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write('\r');
          out.write('\n');
          if (_jspx_meth_c_005fforEach_005f0(_jspx_th_c_005fif_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          int evalDoAfterBody = _jspx_th_c_005fif_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fif_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fif_0026_005ftest.reuse(_jspx_th_c_005fif_005f0);
      _jspx_th_c_005fif_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fif_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fif_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fif_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fif_005f0);
      // /WEB-INF/views/plan/MyScheduleCalendar.jsp(123,0) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/WEB-INF/views/plan/MyScheduleCalendar.jsp(123,0) '${myimportantnm }'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${myimportantnm }",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      // /WEB-INF/views/plan/MyScheduleCalendar.jsp(123,0) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("map");
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("<option value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map.standard_code }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write('"');
            out.write('>');
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${map.standard_name }", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</option>\r\n");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }
}
