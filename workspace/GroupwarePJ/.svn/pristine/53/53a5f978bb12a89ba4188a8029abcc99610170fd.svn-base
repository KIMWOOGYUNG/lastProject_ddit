<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.approval.dao.IApprovalDAO">
	
	
	<sql id="searchFrag">
			<if test="detailSearch!=null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.emp_code)">
					AND EMP_CODE = #{detailSearch.emp_code}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.draft_code)">
					AND DRAFT_CODE like '%'||#{detailSearch.draft_code}||'%'
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.draft_title)">
					AND DRAFT_TITLE like '%'||#{detailSearch.draft_title}||'%'
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.draft_stat)">
					AND DRAFT_STAT = #{detailSearch.draft_stat}
				</if>
			</if>	
	</sql>
	
	<sql id="searchApprLine">
	<trim prefix="WHERE" prefixOverrides="AND">
	<if test="detailSearch!=null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.emp_code)">
					AND EMP_CODE = #{detailSearch.emp_code}
				</if>
			</if>
		<if test="searchVO!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)" >
			<if test="'name'.equals(searchVO.searchType)">
				AND APPR_LINE LIKE '%${searchVO.searchWord}%'
			</if>
			<if test="'emp'.equals(searchVO.searchType)">
				 AND APPR_LINE_CODE IN (SELECT DISTINCT APPR_LINE_CODE
                                    FROM APPR_ORDER Q INNER JOIN EMPLOYEE W ON(Q.EMP_CODE = W.EMP_CODE)
                                   WHERE W.EMP_KOR LIKE '%${searchVO.searchWord}%')
			</if>
		</if>
	</trim>
		
	</sql>
	
	<sql id="searchReviewGroup">
	<trim prefix="WHERE" prefixOverrides="AND">
	<if test="detailSearch!=null">
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.emp_code)">
					AND EMP_CODE = #{detailSearch.emp_code}
				</if>
				<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.rg_type)">
					AND RG_TYPE = #{detailSearch.rg_type}
				</if>
			</if>	
			<if test="searchVO!=null and @org.apache.commons.lang3.StringUtils@isNotBlank(searchVO.searchWord)" >
			<if test="'name'.equals(searchVO.searchType)">
				AND RG_NAME LIKE '%${searchVO.searchWord}%'
			</if>
			<if test="'emp'.equals(searchVO.searchType)">
				 AND RG_CODE IN (SELECT DISTINCT RG_CODE
                                    FROM REVIEWER Q INNER JOIN EMPLOYEE W ON(Q.EMP_CODE = W.EMP_CODE)
                                   WHERE W.EMP_KOR LIKE '%${searchVO.searchWord}%')
			</if>
		</if>
	</trim>
		
			
	</sql>
	
	<sql id="draftStat">
			<if test="detailSearch!=null">
			<choose>
				<when test="@org.apache.commons.lang3.StringUtils@isNotBlank(detailSearch.draft_stat)">
					AND DRAFT_STAT = #{detailSearch.draft_stat}
				</when>
				<otherwise>
					AND DRAFT_STAT IS NOT NULL
				</otherwise>
			</choose>	
			</if>
	</sql>
	
	<select id="selectApproveCount" resultType="int" parameterType="PagingVO">
		SELECT COUNT(DRAFT_CODE)
		FROM DRAFT
		WHERE DRAFT_POS = #{detailSearch.draft_pos}
		<include refid="searchFrag" />
	</select>
	
	

	<select id="selectApprLineCount" resultType="int" parameterType="PagingVO">
		SELECT COUNT(APPR_LINE_CODE)
		FROM APPROVE_LINE
		<include refid="searchApprLine" />
	</select>
	
	<select id="selectTempFolder" parameterType="PagingVO" resultType="DraftVO">
		SELECT A.*
		FROM (
		SELECT ROWNUM RNUM, DRAFT_CODE,DRAFT_TITLE, STANDARD_NAME DRAFT_STAT,DRAFT_DATE
		FROM DRAFT LEFT OUTER JOIN STANDARD ON (DRAFT.DRAFT_STAT = STANDARD.STANDARD_CODE)
		WHERE DRAFT_POS = #{detailSearch.draft_pos}
		<include refid="searchFrag"/>
		 ORDER BY DRAFT_CODE DESC
		)A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	
	
	
	<select id="selectMyDraftList" parameterType="PagingVO" resultType="DraftVO">
		SELECT DRAFT_CODE, DRAFT_DATE, DRAFT_TITLE, STANDARD_NAME DRAFT_STAT
		 FROM DRAFT LEFT OUTER JOIN STANDARD ON (DRAFT.DRAFT_STAT = STANDARD.STANDARD_CODE)
		WHERE EMP_CODE = #{detailSearch.emp_code}
		 <include refid="draftStat"></include> 
		  	OR DRAFT_CODE IN (SELECT APPR_STAT.DRAFT_CODE
							    FROM APPR_STAT INNER JOIN DRAFT ON (APPR_STAT.DRAFT_CODE = DRAFT.DRAFT_CODE)
							   WHERE APPR_STAT.EMP_CODE = #{detailSearch.emp_code}
							   <include refid="draftStat"></include>
							      )
		   OR DRAFT_CODE IN (SELECT REVIEWER_STAT.DRAFT_CODE
								FROM REVIEWER_STAT INNER JOIN DRAFT ON (REVIEWER_STAT.DRAFT_CODE = DRAFT.DRAFT_CODE)
								WHERE REVIEWER_STAT.EMP_CODE = #{detailSearch.emp_code}
								 <include refid="draftStat"></include> 
							   )
		ORDER BY DRAFT_CODE DESC	      		 
	</select>
	
	<select id="selectMyDraftCount" parameterType="PagingVO" resultType="int">
		SELECT COUNT(*)
		 FROM DRAFT
		WHERE EMP_CODE = #{detailSearch.emp_code}
		 <include refid="draftStat"></include> 
		  	OR DRAFT_CODE IN (SELECT APPR_STAT.DRAFT_CODE
							    FROM APPR_STAT INNER JOIN DRAFT ON (APPR_STAT.DRAFT_CODE = DRAFT.DRAFT_CODE)
							   WHERE APPR_STAT.EMP_CODE = #{detailSearch.emp_code}
							     <include refid="draftStat"></include>  )
		   OR DRAFT_CODE IN (SELECT REVIEWER_STAT.DRAFT_CODE
								FROM REVIEWER_STAT INNER JOIN DRAFT ON (REVIEWER_STAT.DRAFT_CODE = DRAFT.DRAFT_CODE)
								WHERE REVIEWER_STAT.EMP_CODE = #{detailSearch.emp_code}
								 <include refid="draftStat"></include> )
		 ORDER BY DRAFT_CODE DESC
	</select>
	
	<resultMap type="DraftVO" id="draftMap" autoMapping="true">
		<id property="draft_code" column="DRAFT_CODE"/>
		<collection property="attatchList" javaType="java.util.List" ofType="Draft_AttatchVO" autoMapping="true"/>
	</resultMap>
	
	<select id="selectDraft" parameterType="DraftVO" resultMap="draftMap">
		SELECT * 
		FROM DRAFT INNER JOIN DRAFT_ATTATCH ON(DRAFT.DRAFT_CODE = DRAFT_ATTATCH.DRAFT_CODE)
		WHERE DRAFT_CODE = #{draft_code}
		ORDER BY DRAFT_CODE DESC
	</select>
	
	<resultMap type="Approve_LineVO" id="apprMap" autoMapping="true">
		<id property="appr_line_code" column="APPR_LINE_CODE"/>
		<collection property="orderList" javaType="java.util.List" ofType="EmployeeVO" autoMapping="true"/>
	</resultMap>
	
	<resultMap type="ReviewerGroupVO" id="reviewerMap" autoMapping="true">
		<id property="rg_code" column="RG_CODE"/>
		<collection property="reviewerList" javaType="java.util.List" ofType="EmployeeVO" autoMapping="true"/>
	</resultMap>
	
	<select id="selectMyApprGroup" parameterType="string" resultMap="apprMap">
	SELECT B.EMP_CODE, B.EMP_KOR, C.APPR_LINE_CODE , C.APPR_LINE, D.POSITION_NAME
  FROM (SELECT *
          FROM APPR_ORDER) A INNER JOIN EMPLOYEE B ON (A.EMP_CODE = B.EMP_CODE)
                     INNER JOIN POSITION D ON(B.POSITION_CODE = D.POSITION_CODE)
                  RIGHT OUTER JOIN APPROVE_LINE C  ON (A.APPR_LINE_CODE = C.APPR_LINE_CODE)
            WHERE C.EMP_CODE = #{emp_code}
      
	</select>
	
	<select id="selectMyReviewerGroup" parameterType="ReviewerGroupVO" resultMap="reviewerMap">
		SELECT B.EMP_CODE, B.EMP_KOR, D.RG_CODE, D.RG_NAME,C.POSITION_NAME                 
		  FROM (SELECT * 
                  FROM REVIEWER) A INNER JOIN EMPLOYEE B ON (A.EMP_CODE = B.EMP_CODE)
										      INNER JOIN POSITION C ON (B.POSITION_CODE = C.POSITION_CODE)
										      RIGHT OUTER JOIN REVIEWER_GROUP D ON (D.RG_CODE = A.RG_CODE)
										WHERE D.EMP_CODE = #{emp_code}     
										AND D.RG_TYPE = #{rg_type} 
	</select>
	
	<select id="selectModifyApprLineInfo" parameterType="Approve_LineVO" resultMap="apprMap">
		  SELECT A.APPR_LINE_CODE, A.APPR_LINE, B.EMP_CODE, C.EMP_KOR , D.POSITION_NAME POSITION_CODE
			FROM APPROVE_LINE A LEFT OUTER JOIN APPR_ORDER B ON(A.APPR_LINE_CODE = B.APPR_LINE_CODE)
                    			INNER JOIN EMPLOYEE C ON (B.EMP_CODE = C.EMP_CODE) 
                    			INNER JOIN POSITION D ON (D.POSITION_CODE = C.POSITION_CODE)
			WHERE A.APPR_LINE_CODE = #{appr_line_code}
  			  AND A.EMP_CODE = #{emp_code}
  			  
  			  UNION ALL
  			  
  			  SELECT APPR_LINE_CODE , APPR_LINE, null EMP_CODE,  null EMP_KOR,  null POSITION_CODE
  			    FROM APPROVE_LINE
  			  WHERE APPR_LINE_CODE = #{appr_line_code}
  			  AND EMP_CODE = #{emp_code}
  			  
  			     
	</select>
	
	<select id="selectModifyReviewerLineInfo" parameterType="ReviewerGroupVO" resultMap="reviewerMap">
	  SELECT A.RG_CODE,RG_NAME, B.EMP_CODE, C.EMP_KOR,  D.POSITION_NAME POSITION_CODE
		FROM REVIEWER_GROUP A LEFT OUTER JOIN REVIEWER B ON(A.RG_CODE = B.RG_CODE )
		              		  INNER JOIN EMPLOYEE C ON (C.EMP_CODE = B.EMP_CODE)
		              		  INNER JOIN POSITION D ON (D.POSITION_CODE = C.POSITION_CODE)
		WHERE A.RG_CODE = #{rg_code}
		  AND A.EMP_CODE = #{emp_code}
		  
		   UNION ALL
  			  
		  SELECT RG_CODE , RG_NAME, null EMP_CODE,  null EMP_KOR,  null POSITION_CODE
		    FROM REVIEWER_GROUP
		  WHERE RG_CODE = #{rg_code}
		  AND EMP_CODE = #{emp_code}
	</select>
	
	
	
	<select id="selectApproveLine" parameterType="PagingVO" resultType="Approve_LineVO">
		SELECT A.*
		FROM (
		SELECT ROWNUM RNUM, APPR_LINE_CODE,APPR_LINE, EMP_CODE
		  FROM APPROVE_LINE
		 <include refid="searchApprLine"/>
		 ORDER BY APPR_LINE_CODE DESC
		) A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectReviewerGroupCount" resultType="int" parameterType="PagingVO">
			SELECT COUNT(*)
		FROM REVIEWER_GROUP
		<include refid="searchReviewGroup" />
	</select>

	<select id="selectReviewerGroup" parameterType="PagingVO" resultType="ReviewerGroupVO">
		SELECT A.*
		FROM (
		SELECT ROWNUM RNUM, RG_CODE,RG_NAME, EMP_CODE
		  FROM REVIEWER_GROUP
		 <include refid="searchReviewGroup"/>
		  ORDER BY RG_CODE DESC
		) A
		WHERE RNUM BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<select id="selectReviewer" parameterType="String" resultType="ReviewerVO">
		SELECT EMP_CODE, REVIEWER_DEL
		  FROM REVIEWER
		 WHERE RG_CODE = #{rg_code}   
	</select>
	
<!-- 	<select id="selectEmpSortList" parameterType="String" resultType="EmployeeVO"> -->
<!-- 		  SELECT * -->
<!--     FROM EMPLOYEE -->
<!--     WHERE EMP_CODE IN (${emp_codeList}) -->
<!--     ORDER BY POSITION_CODE DESC, EMP_STARTDATE ASC -->
<!-- 	</select> -->
	
	
	<select id="selectApprOrder" parameterType="String" resultType="Appr_OrderVO">
		SELECT EMP_CODE
		FROM APPR_ORDER
		WHERE APPR_LINE_CODE = #{appr_line_code}
	</select>
	
	<select id="selectApproveStat" parameterType="String" resultType="Appr_StatVO">
		SELECT *
		  FROM APPROVE_STAT
		 WHERE DRAFT_CODE = #{draft_code}  
	</select>
	
	<insert id="insertApproveStat" parameterType="Appr_StatVO">
		<selectKey keyProperty="appr_stat_code" resultType="string" order="BEFORE">
			  SELECT 'AS'||LPAD(NVL(MAX(SUBSTR(APPR_STAT_CODE,3)),0)+1,3,'0')
                FROM APPR_STAT
		</selectKey>
	INSERT INTO APPR_STAT(
    APPR_STAT_CODE, APPROVED_TIME,REJECT_REASON,
    DRAFT_CODE, APPR_STAT_CATAG,CMT_CODE, EMP_CODE,APPR_ORDER
	)VALUES(
   	 #{APPR_STAT_CODE}, SYSDATE,#{reject_reason,jdbcType=VARCHAR}, #{draft_code,jdbcType=VARCHAR},
    	#{appr_stat_catag,jdbcType=VARCHAR},#{cmt_code,jdbcType=VARCHAR}
    	,#{emp_code,jdbcType=VARCHAR},#{appr_order,jdbcType=VARCHAR}
	)
	</insert>
	
	
	<insert id="insertApproveLine" parameterType="Approve_LineVO">
		<selectKey keyProperty="appr_line_code" resultType="string" order="BEFORE">
			  SELECT 'AL'||LPAD(NVL(MAX(SUBSTR(APPR_LINE_CODE,3)),0)+1,3,'0')
                FROM APPROVE_LINE
		</selectKey>
	INSERT INTO APPROVE_LINE(
    APPR_LINE_CODE, APPR_LINE, EMP_CODE
	)VALUES(#{appr_line_code}
	, #{appr_line,jdbcType=VARCHAR}
	,#{emp_code,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertApproveOrder" parameterType="Appr_OrderVO">
		<selectKey keyProperty="appr_order_code" resultType="string" order="BEFORE">
			  SELECT 'AO'||LPAD(NVL(MAX(SUBSTR(APPR_ORDER_CODE,3)),0)+1,3,'0')
                FROM APPR_ORDER
		</selectKey>
	INSERT INTO appr_order(
    appr_order_code, emp_code,
    appr_line_code
    )VALUES(
    #{appr_order_code},
    #{emp_code,jdbcType=VARCHAR}, #{appr_line_code,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertReviewerGroup" parameterType="ReviewerGroupVO">
		<selectKey keyProperty="rg_code" resultType="string" order="BEFORE">
			  SELECT 'RG'||LPAD(NVL(MAX(SUBSTR(RG_CODE,3)),0)+1,3,'0')
                FROM REVIEWER_GROUP
		</selectKey>
		INSERT INTO REVIEWER_GROUP(RG_CODE,RG_NAME,EMP_CODE,RG_TYPE) 
			VALUES(#{rg_code,jdbcType=VARCHAR},#{rg_name,jdbcType=VARCHAR},#{emp_code,jdbcType=VARCHAR},#{rg_type,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertReviewerLine" parameterType="ReviewerVO">
		<selectKey keyProperty="reviewer_code" resultType="string" order="BEFORE">
			  SELECT 'RE'||LPAD(NVL(MAX(SUBSTR(REVIEWER_CODE,3)),0)+1,3,'0')
                FROM REVIEWER
		</selectKey>
			INSERT INTO REVIEWER(REVIEWER_CODE,RG_CODE,EMP_CODE) 
			VALUES(#{reviewer_code,jdbcType=VARCHAR},#{rg_code,jdbcType=VARCHAR},#{emp_code,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertReviewerStat" parameterType="Reviewer_StatVO">
		<selectKey keyProperty="appr_order_code" resultType="string" order="BEFORE">
			  SELECT 'RS'||LPAD(NVL(MAX(SUBSTR(RS_CODE,3)),0)+1,3,'0')
                FROM REVIEWER_STAT
		</selectKey>
			INSERT INTO REVIEWER_STAT(RS_CODE,DRAFT_CODE,EMP_CODE) 
			VALUES(#{rs_code,jdbcType=VARCHAR},#{draft_code,jdbcType=VARCHAR},#{emp_code,jdbcType=VARCHAR})
	</insert>
	
	<insert id="insertDraft" parameterType="DraftVO">
		<selectKey keyProperty="draft_code" resultType="string" order="BEFORE">
			  SELECT 'DR'||LPAD(NVL(MAX(SUBSTR(DRAFT_CODE,3)),0)+1,3,'0')
                FROM APPR_ORDER
		</selectKey>
		  INSERT ALL INTO DRAFT(
			    DRAFT_CODE, DRAFT_DATE,
			    EMP_CODE, DRAFT_TITLE, DRAFT_CONTENT
			   , DRAFT_POS, DRAFT_STAT
					)VALUES(
			   #{draft_code},SYSDATE,
			   #{emp_code},#{draft_title},
			    #{draft_content},#{draft_pos},#{draft_stat}
   		 <foreach collection="attatchList" item="att">
			INSERT INTO draft_attatch(
    		draft_attcode, draft_code, file_path, file_size,
    		org_name, save_name
			)VALUES(
			'DT'||LPAD(NVL(MAX(SUBSTR(#{att.draft_attcode,jdbcType=VARCHAR},3)),0)+1,3,'0'), 
			draft_code, #{att.file_path,jdbcType=VARCHAR},#{att.file_size,jdbcType=VARCHAR}
			,#{att.org_name,jdbcType=VARCHAR},#{att.save_name,jdbcType=VARCHAR}
    		)
		</foreach>
	</insert>
	
	<insert id="insertDraftAttatch" parameterType="Draft_AttatchVO">
		<selectKey keyProperty="draft_attcode" resultType="string" order="BEFORE">
			  SELECT 'DT'||LPAD(NVL(MAX(SUBSTR(DRAFT_ATTCODE,3)),0)+1,3,'0')
                FROM DRAFT_ATTATCH
		</selectKey>
			INSERT INTO draft_attatch(
    		draft_attcode, draft_code, file_path, file_size,
    		org_name, save_name
			)VALUES(
			#{draft_attcode}, #{draft_code,jdbcType=VARCHAR}, #{file_path,jdbcType=VARCHAR},#{file_size,jdbcType=VARCHAR}
			,#{org_name,jdbcType=VARCHAR},#{save_name,jdbcType=VARCHAR}
    		)
	</insert>
	
	<update id="updateDraft" parameterType="DraftVO"> 
		UPDATE DRAFT
			SET
    DRAFT_DATE = sysdate,
    DRAFT_TITLE = #{draft_title,jdbcType=VARCHAR},
    DRAFT_CONTENT = #{draft_content,jdbcType=VARCHAR},
    DRAFT_POS = #{draft_pos,jdbcType=VARCHAR}
	WHERE
    DRAFT_CODE = #{draft_code,jdbcType=VARCHAR}
    AND DRAFT_STAT IS NULL
	</update>
	
	<update id="updateApproveStat" parameterType="Appr_StatVO">
	UPDATE APPR_STAT
	SET
    	APPROVED_TIME = SYSDATE
    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(reject_reason) "> 
    		,REJECT_REASON = #{reject_reason,jdbcType=VARCHAR}
    	</if>
    	,APPR_STAT_CATAG = #{appr_stat_catag,jdbcType=VARCHAR}
    	<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(cmt_code) ">
    	,CMT_CODE = #{cmt_code,jdbcType=VARCHAR}
    	</if>
    	,APPR_READ = 'y'
	WHERE
    	APPR_STAT_CODE = #{appr_stat_code,jdbcType=VARCHAR}
	</update>
	
	<update id="updateApproveGroup" parameterType="Approve_LineVO">
	UPDATE APPROVE_LINE
	SET
		APPR_LINE = #{appr_line}
	WHERE APPR_LINE_CODE = #{appr_line_code}
	  AND EMP_CODE = #{emp_code}
	</update>
	
	<update id="updateReviewerGroup" parameterType="ReviewerGroupVO">
		UPDATE REVIEWER_GROUP
		   SET RG_NAME = #{rg_name}
	   WHERE RG_CODE = #{rg_code}
	   	 AND EMP_CODE = #{emp_code}
	</update>
	
	
	<update id="updateReviewerStat" parameterType="Reviewer_StatVO">
		UPDATE REVIEWER_STAT
		   SET RS_READ = #{rs_read} 
		 WHERE RS_CODE = #{rs_code}   
	</update>
	
	
	
	<delete id="deleteDraft" parameterType="DraftVO">
		DELETE FROM DRAFT
		WHERE
    		DRAFT_CODE = #{draft_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteDraftAttatch" parameterType="Draft_AttatchVO" >
		  DELETE FROM DRAFT_ATTATCH
		WHERE
    		DRAFT_ATTCODE = #{draft_attcode,jdbcType=VARCHAR}
	</delete>
	<delete id="deleteAllDraftAttatch" parameterType="DraftVO">
		DELETE FROM DRAFT_ATTATCH
		WHERE
    		DRAFT_CODE = #{draft_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteAllApproveOrder" parameterType="String">
		DELETE FROM APPR_ORDER
			WHERE
    	APPR_LINE_CODE = #{appr_line_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteApproveOrder" parameterType="Appr_OrderVO">
		DELETE FROM APPR_ORDER
			WHERE APPR_LINE_CODE = #{appr_line_code,jdbcType=VARCHAR}
    			EMP_CODE = #{emp_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteApproveLine" parameterType="String">
		DELETE FROM APPROVE_LINE
			WHERE
		appr_line_code = #{appr_line_code,jdbcType=VARCHAR}
	</delete>
	
	<delete id="deleteReviewerGroup" parameterType="ReviewerGroupVO">
		DELETE FROM REVIEWER_GROUP
		WHERE RG_CODE = #{rg_code} 
	</delete>
	
	<delete id="deleteAllReviewerOrder" parameterType="String">
		DELETE FROM REVIEWER
		WHERE RG_CODE = #{rg_code}
		  
	</delete>
	
	<delete id="deleteReviewerOrder" parameterType="ReviewerVO">
		DELETE FROM REVIEWER
		WHERE RG_CODE = #{rg_code}
		  AND EMP_CODE = #{emp_code}
	</delete>
</mapper>

 